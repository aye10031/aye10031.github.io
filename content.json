{"pages":[],"posts":[{"title":"第一篇日志","text":"最近闲着无聊，搭个个人博客玩玩。正好以后有一些东西也可以发在这里。嘛，看我明天发个教程啥的吧。","link":"/2017/10/28/2017-10-28-myFirstBlog/"},{"title":"如何从官网下载驱动","text":"我们的电脑中，硬件是一个很重要的部分。而为了让这些硬件能够正常的运行，驱动是非常重要的一个软件。一般来说，很多人在面对跟驱动有关的问题时，第一反应是下一个驱动精灵。当然不可否认的是驱动精灵在大部分时候都能解决你的问题，但是你也注意到了，我说的是“大部分”。那么，还有一部分是怎样的呢？ 我们的通常所使用的笔记本电脑都是有自己的型号的，而每一个型号的电脑都有他自己专门的驱动 。一般来说,驱动精灵都可以帮我们匹配我们电脑相应的驱动并进行安装，但是毕竟存在意外，有的时候驱动精灵在找不到专版驱动的情况下可能会给我们下载公版驱动。而有时候因位公版驱动与我们电脑本身的硬件并不完全匹配。这时候就会造成一些问题了。 常见问题最常见的就是在更新完驱动之后重启电脑时显示“无法重启电脑”，此时的原因就是某些驱动不匹配造成了系统无法正常开机。此时你需要做的就是进入安全模式，在设备管理器中删除掉错误的驱动，或者选择回退到你更新之前的驱动就可以解决问题了。当然，如果你连安全模式都无法进入，那么如果手上有PE盘，可以进入PE进行操作，否则的话，还是把你的电脑拿给专业人员修吧！当然，电脑能够成功运行也并不是代表你的驱动就没有问题– “哎呀,我的电脑更新驱动之后玩守望fps咋这么低啊” 很明显，我的这位室友就是因为更新了不适合的显卡驱动造成了这个问题。还有很多其他一些电脑的小问题–有些可能你都没有注意到————这些问题都是由于不合适的驱动造成的。看来安装合适自己电脑的驱动确实非常必要，那么问题来了，我们到底怎么安装适合自己电脑的驱动呢？ 官网下载驱动从标题开始我就一直在强调我们需要下载适合我们自己电脑的驱动。那么哪里有最适合我们自己电脑的驱动呢？当然是官网辣！现在我就来简单讲讲怎么从官网下载匹配本机型号的驱动。在下载驱动之前，我们首先要做的是查看自己电脑的主机编号。 主机编号 主机编号也就是主机生产出厂的编号，简称SN(serial number)（服务序列号或服务编码）,用于厂家提供技术支持或报修用，一般在主机机身上，可能会和条形码粘贴在一起，笔记本SN在电脑底部，台式主机SN在机箱底部、顶部、两侧都有可能，如果是杂牌或组装就可能没有SN。 主机编号也有好几种方式可以查看，不过最常见也是最方便的也就只有两种，下面我就来讲一下这两方法的具体操作步骤 直接在电脑表面查看。听上去好像让人一脸懵逼，什么叫直接在电脑表面查看？实际上很简单，上面也说了，主机编号一般在你买电脑的包装盒上就有贴着，不过如果你已经把包装盒给扔了那怎么办呢？也不要紧，把你的笔记本翻过来（我知道你们没几个会带个台式机来学校），笔记本背面有一个白色的标签条贴在那边，上面就有你的主机编号。注意，主机编号一般是一串混合了字母和数字的东西，不要把你的电脑型号当成主机号咯。上图中划红线的就是主机编号。 通过BIOS查看。这个就很简单了，直接进入BIOS后再首页上就有主机编号，可能是S/N也可能是system serial number，总之只要看到一串很可疑（并不）的数字字母混合体就好啦，把它记下来（拍下来或者抄到纸上都行），备用。查看好主机编号之后，我们就可以去官网下载驱动了。 搜索适合自己电脑的驱动这里的第一步就是你要找到官网，确保你进入的是官网而不是什么奇奇怪怪的地方。在官网里面找到“服务与支持”或者是“下载”这一类的子页面，然后寻找驱动下载这个选项。或者在官网的页面上直接站内搜索驱动下载这一类字眼，来到驱动下载页面。例如下图的下载界面就是联想的驱动下载页 在输入框中输入你刚才记下来的主机编号，回车或者点击搜索，即可来到你的电脑型号的驱动下载界面。选择你的操作系统（比如是windows10-64位还是Linux），选择好之后再回车就可以看到你电脑的驱动下载列表了。一般把列表里面的驱动全部选择下载就可以了。当然有的厂家也提供了更加快捷的方式————驱动管理，解释的通俗一点就跟驱动精灵用处一样，他会自动检测你的硬件并帮你安装驱动，不过由厂家提供的这个软件下载的驱动是完全匹配你的版本的，所有如果有这个选项你就只需要下载下来这一个程序并安装运行就可以让它帮你完成驱动的安装了。当然也有的厂家并没有这一程序，那么你就只能自己一个一个的把列表里面所有的驱动都下载下来并自行安装了。 自行安装下载好的驱动之前下载好的文件应该都是压缩包文件，我建议你新建一个文件夹，然后把这些压缩包都丢进去。之后分别解压，得到的一系列文件夹就是你接下来需要用到的东西了。依次打开每一个驱动的文件夹，找到setup.exe文件并运行安装，全部按照默认设置无脑下一步就好。一般没装完一个驱动系统就会询问你是否重启计算机来让设置生效，当然如果你愿意的花可以选择每安装一个驱动就重启一次电脑，不过我觉得大部分人不会去干这种事，所以在安装完毕之后全部都选择有“稍后重启”这个意思的选项，等你的驱动全部安装完了之后再手动重启电脑就好。 备注 有一些驱可能你运行setup.exe的时候会报错此电脑不符合安装此程序的最低要求或者其他的一些报错，这个没有关系，不能安装就跳过这一个驱动继续往下安装就好 重要！在安装驱动的过程中千万不要人为关机或者是电脑因为没电而关机。否则会出现很严重的错误！安装驱动前请务必确定电脑状态良好！ 一些常见厂家的驱动下载页的链接联想中国华硕惠普中国 本教程的视频链接【科技部培训】1、告别驱动精灵，学会从官网下载驱动","link":"/2017/10/28/2017-10-29-qudongjingling/"},{"title":"永远的七日之都一周目安(shuang)线攻略","text":"第一天1.高校通关6次 体力122.安 巡查中央厅 光荣女仆 体力2 此时安好感113薇拉、安 日常巡查3次 体力6 此时安好感23 薇拉184点击2次东方古街，激活开发，建设功能5.开发高校1次 体力2 高校等级为26.通关东方古街1次 体力2 第二天1.起床自动触发剧情，安好感+5 安好感 292.活骸战后，出现的选项，拒绝希罗，尊重当事人想法，不隐瞒真相，不找希罗，安好感+5 安好感 343.安巡查高校 成人仪式 体力2 安好感49 薇拉19 去成人仪式前，先回复安的私信4.通关东方古街5次 体力10 安好感54 薇拉245.安薇拉 日常巡查2次 体力4 安好感62 薇拉 326.中央城区通关3次 体力6 安好感65 薇拉347.开发高校1次 体力2 高校等级为3 第三天1.中央城区通关3次 体力6 安好感68 薇拉382.安巡查中央城区 拍照的魅力 选项:同意 体力2 安好感88 薇拉383.安巡查东方古街 同为异类 体力2 安88 薇拉38(这里如果好感不足80支线任务不会出现)4.安薇拉 日常巡查2次 体力4 安好感96 薇拉465.建设2工程厅1研究所 体力6，中央城区和研究所要留一个格子其他随意6.研究所通关2次 体力4 安好感98 薇拉48 第四天1.研究所 体力8 安100 薇拉522.安薇拉巡查1次 体力2 安100 薇拉563.安巡查 中央城区 终于找到你 选项：悲伤 发誓 体力2(安线成功了一半)4.为了满足安线的前置要求 需要的建设力22 开发力22 科技30 且开局给的人物不同，请各位检查一下自己缺的数值进行建设补足 体力10(有的同学会发现建完还没达标，没关系,下一天继续)5.薇拉巡查中央庭 计划 体力2 第五天任务目标改为获取中央庭信任度1.建设建筑，使数据达标为科技30开发力22建设力222.安巡查高校 开发高校到4级3.安巡查中央城区 建设购物中心4.安巡查研究所 建设歌舞厅5.剩余体力带安来回巡查东方古街和中央庭 第六天1.巡查东方古街和中央庭，直至完成支线获取信任度2.余下体力可以继续做我们的薇拉线，此时薇拉好感为56，且由于第五天已经做了一次支线，所以我们要需要8点体力完成后面的剧情3.合理分配好日常巡查次数和礼物的使用4.薇拉后面的剧情也是有好感加的，所以礼物不急着送5.薇拉60点好感，首先要去回复薇拉的私信再去巡查中央城区，触发剧情渗透6.薇拉继续巡查中央城区，触发剧情潜伏7.把薇拉影装升好，并留下36w金币薇拉继续巡查中央城区，触发剧情突围。8.留下2点体力，把薇拉好感升到100巡查中央城区，触发剧情约会 第七天不好意思，不存在的，这时候你被锁在中央庭了，只能咸鱼 后记本攻略来自百度贴吧永远的七日之都吧精品区原链接","link":"/2017/12/10/2017-12-10-qrzd-1st-an/"},{"title":"永远的七日之都安托涅瓦攻略","text":"前置需求10位神器使（必要人物：伽儿）、建筑才能满足14点（两位神神器使相加）、开发才能满足22点、36万金币 第七天1.巡查【中央庭】三次分别触发【中央庭的女王1】、【中央庭的女王2】、【安托涅瓦的引荐】（须选择【占卜】并支付36万金币）[行动力24→18]2.打开【论坛】触发新剧情选择【得到讯息】并在安的对话中选择【去调查一下吧】[无行动力消耗]3.携带【安】巡查【中央庭】触发【调查幽灵】得到方舟设计图[行动力18→16]4.解放【高校学院1-6】并开发【高校学院】两次[行动力18→0] 第六天0.开场剧情请按顺序选择【拒绝希罗】、【一定会有办法的】、【说出活骸情况】、【不再去与希罗扯上关系】（影响后续剧情）1.携带【伽儿】巡查【中央庭】触发【探望西比尔】获得B1级神器使【西比尔】[行动力24→22]2.【高校学院】建设【地下研究所】→【公共图书馆】、【地下研究所】→【大型研究所】、【地下研究所】→【大型研究所】、【大型研究所】、【大型研究所】（总计一个【公共图书馆】四个【大型研究所】）[行动力22→6]3.【中央庭】建设【起重机】X2[行动力6→2]4.【中央庭】建设【方舟】[行动力2→0] 第五天0.开场触发分裂剧情 选择【拒绝希罗】并【赢得】剧情战胜利1.巡查【方舟所在地】（中央庭）三次分别触发【第一次的方舟】（对话选择【拜托你了】）、【第二次的方舟】、【第三次的方舟】[行动力24→18]2.巡查【中央庭】触发【零的资料】[行动力18→16]3.巡查【方舟所在地】（中央庭）触发【最后一次的方舟】对话中选择【带着安托涅瓦一起跑】[行动力16→14]4.开发【中央庭】一次并建设【市立情报局】（选择解决【不稳定的黑门】和【交通通讯故障】）[行动力14→10]5.解放【东方古街（或中央城区）1-5】[行动力10→0] 第四天1.解放【东方古街（或中央城区）6】[行动力24→22]2.【高校学院】建设【市立研究所】[行动力22→20]3.开发【东方古街（或中央城区）】一次[行动力20→18]4.【东方古街（或中央城区）】建设【大型研究所】X5[行动力18→8]5.解放【中央城区（或东方古街）1-4】[行动力8→0] 第三天0.剧情选择【留下照顾安托涅瓦】并在剧情结束后第一时间查看论坛并回复【雷切尔】1.巡查【中央庭】触发【雷切尔的实验室】[行动力24→22]2.开发【中央庭】一次并建设【急救中心】[行动力22→18]3.解放【中央城区（或东方古街）5-6】[行动力18→14]4.开发【东方古街（或中央城区）】并建设【区立研究所】[行动力14→10]5.【中央城区】建设【大型研究所】X4[行动力10→2]全黑核剧情：（P.S. 请提前算好突袭所需情报值防止出现溢出或浪费导致无法完成突袭）6.开发【中央城区】一次[行动力2→0] 第二天0.开场剧情完成获得S1级神器使【安托涅瓦】[无行动力消耗]1.【中央城区】建设【大型工程厅】[行动力24→22]2.解放【研究所1-6】[行动力22→10]3.开发【研究所】一次[行动力10→8]4.【研究所】建设【大型情报局】 X 4 [行动力8→0]（情报使用有限度：【交通信号故障】&gt;【突袭】 情报【不稳定的黑门】可不处理 若没有出现【不稳定】和【交通信号】可优先处理情报要求较高的【突袭】） 第一天0.开场剧情结束后进入【刺杀】（如果第五天【分裂】结束希罗拿【东方古街】和【中央城区】黑核 【刺杀】胜利后会直接获得这两个黑核）1.完成第一次【突袭】[行动力24→22]2.在第一次【突袭】成功地点建设【大型情报局】X4[行动力22→14]3.处理第二次【突袭】地点并成功突袭[行动力14→12]4.在第二次【突袭】地点建设【大型情报局】X2[行动力12→8]5.处理第三次【突袭】并成功突袭[行动力8→6]6.携带【珈儿】巡查【高校学院】（获取【黑核】）[行动力6→4]7.巡查【研究所】一次（获取【黑核】）[行动力4→2] 剩余两点可用于补充【不稳定的黑门】破坏的建筑或结局前补充情报值 此时如果神器使数量正确已满足210点科技 结束当天一天第二天触发剧情得到神器使【安托涅瓦】（科技点不够须抽取新神器使使科技值达到210点） 全剧终后记本攻略来自B站up主“轻语幽梦”的视频攻略原链接","link":"/2017/12/12/2017-12-12-qrzd-antuo/"},{"title":"永远的七日之都-多人攻略整合","text":"依旧整合自b站up主轻语幽梦的视频，如原作者本人有异议立即删除。 妮维线 要求：妮维、通关【中央城区】、10点行动力（不计算好感增加消耗） 【妮维】好感度达到【40】后 手帐更新 携带【妮维】巡查【中央庭】触发剧情【奇怪的信】（选项都有对话提示请注意观看~）好感度+10[好感度50] 【妮维】好感度达到【70】手帐更新 携带【妮维】巡查【中央城区】4次分别触发剧情【不可靠的要求】、【孤立无援】、【妮维在行动】、【最终时刻】 妮维攻略成功~ 西比尔线 西比尔、妮维、通关【高校学院】、10点行动力（不计算好感增加消耗） 【西比尔】好感度达到【20】后更新手帐 携带【西比尔】巡查【高校学院】触发剧情【落水的少女】（选项1好感度+5 选项2好感度+10）[好感度30] 【西比尔】好感度达到【40】后更新手帐与论坛讯息 确认后携带【西比尔】巡查【高校学院】触发剧情【下落不明的学生】并触发剧情战（只需要等待60秒即可通过） 私信更新回复后获得【好感度+5】[好感度45] 【西比尔】好感度达到【50】后 手帐更新 携带【西比尔】巡查【高校学院】触发剧情【无果的搜寻】 结束后私信回复【妮维】 [好感度50] 【西比尔】好感度达到【60】后 携带【妮维】与【西比尔】巡查【高校学院】触发剧情【与妮维一起追踪】并触发剧情战 结束后选项选择【化学药剂】 获得好感度+20 [好感度80] 【西比尔】好感度达到【满值】后 携带【西比尔】巡查【高校学院】触发剧情【远方的信】 至此西比尔攻略结束~ 羽弥线 羽弥、通关【研究所】、12点行动力（不计算好感增加消耗） 带上【羽弥】巡查【研究所】触发【宅居的女孩】（此时羽弥不会回复你）[羽弥好感度0] 【羽弥】好感度达到【20】后 触发论坛信息【来自彩虹的口味！】 确认信息得到道具【彩虹糖】。此时手帐更新[虽然上次去羽弥住处吃了闭门羹，不过今天应该能在家了！] [羽弥好感度20] 再次带上【羽弥】巡查【研究所】触发【宅居的女孩】（羽弥好感度+10）[羽弥好感度30] 【羽弥】好感度达到【40】后 手帐更新[该去研究所带羽弥出去逛逛了，去哪里好呢？] 带上【羽弥】巡查【研究所】触发【羽弥的新工作】 手帐更新（羽弥好感度+10）[羽弥好感度50] 【羽弥】好感度达到【60】后 手帐更新[该去看看羽弥的情况了，……] 戴上【羽弥】巡查【研究所】触发【泡咖啡的羽弥】手帐更新（羽弥好感度+5）[羽弥好感度65] 带上【羽弥】巡查【研究所】触发【突然袭击】（触发战斗 详情请看视频） 结束后手帐更新（羽弥好感度+15）[羽弥好感度80] 【羽弥】好感度【满值】后手帐更新 巡查【研究所】触发【美好的看板娘】 羽弥攻略完成~ 千藻诗歌线 千藻诗歌、通关【中央城区】、10点行动力（不计算好感增加消耗） 【千藻诗歌】好感度达到【30】时 手帐更新 并收到私信 回复后 携带【千藻诗歌】巡查【中央庭】触发剧情【邪恶的神器使】好感度+10[好感度40] 【千藻诗歌】好感度达到【50】时 手帐更新 携带【千藻诗歌】巡查【中央城区】触发剧情【神秘组织】好感度+10[好感度60] 【千藻诗歌】好感度达到【75】时 手帐更新并收到私信 回复后携带【千藻诗歌】巡查【高校学院】触发剧情【魔王降临】并触发剧情战,胜利后好感度+15[好感度90] 携带【千藻诗歌】巡查【高校学院】触发剧情【魔王崛起】 好感度+5[好感度95] 【千藻诗歌】好感度达到【满值】后 携带【千藻诗歌】巡查【高校学院】触发剧情【想成为魔王的少女】 千藻诗歌攻略成功~","link":"/2017/12/16/2017-12-16-qrzd-more/"},{"title":"git常用指令","text":"安装后配置时12$ git config --global user.name &quot;Your Name&quot; $ git config --global user.email &quot;email@example.com&quot; 这一步是设置用户，表示是谁在对这个仓库进行操作 新建版本库首先还是新建一个空目录用来作为版本仓库 123$ mkdir test //新建文件夹test $ cd test $ pwd //显示当前目录 接下来把这个目录变成Git可以管理的仓库 1$ git init 版本仓库就建好啦 添加新文件注意，所有的操作都应该在刚才建立的目录下进行操作哦这里是两个最常用的指令 12$ git add &lt;file&gt; //将工作区的文件添加到暂存区 $ git commit -m &quot;...&quot;//将暂存区的修改提交到分支 另外，查看工作区状态可以用到以下两条指令: 12$ git status //查看工作区状态 $ git diff //查看具体修改的内容 版本回退查看已有的提交历史: 1$ git log 回退版本: 123$ git reset --hard HEAD^ //回退到上一个版本 $ git reset --hard HEAD^^ //回退到上上个版本 $ git reset --hard commit_id //回退到指定版本 HEAD指的就是当前版本查看历史指令: 1$ git reflog 修改与撤销撤销工作区在上一次提交之后的改动: 1$ git checkout -- &lt;file&gt; 撤销提交到暂存库的修改： 12git reset HEAD file //在这一步后再进行对工作区修改的撤销 删除文件： 1git rm &lt;file&gt; 对分支的操作1234567891011&amp; git branch //查看分支 &amp; git branch &lt;name&gt; //创建分支 $ git checkout &lt;name&gt; //切换分支 &amp; git checkout -b &lt;name&gt; //创建+切换分支 $ git merge &lt;name&gt; //合并某分支到当前分支 $ git merge --no-ff -m &quot;...&quot; &lt;name&gt; //使用普通模式合并分支，可以显示合并历史 $ git branch (-m | -M) &lt;oldbranch&gt; &lt;newbranch&gt; //重命名分支 $ git branch -d &lt;name&gt; //删除分支 $ git branch -D &lt;name&gt; //强行删除未合并分支$ git log --graph //查看分支合并图 $ git log --graph --pretty=oneline --abbrev-commit //也可以查看分支合并图 当要合并的分支与主分支之间有冲突时会提示无法合并，需要手工修改冲突文件后进行 与远程仓库有关的操作要将远程仓库与本地仓库关联起来首先需要创建SSH Key： 1$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot; 之后可以在用户主目录下找到.ssh文件夹，将其中id_rsa.pub文件中的全部内容复制，登录自己的github账号，在设置里面的SSH and GPG keys中添加SSH key，标题任意，将刚才复制的内容黏贴在下面，完成。将自己的github仓库与本地仓库关联： 1$ git remote add origin git@github.com:&lt;your git&gt; 将本地仓库推送到远程仓库： 1$ git push -u origin master","link":"/2017/12/21/2017-12-21-git/"},{"title":"topologycraft工作手记","text":"外服种子 2075596822522433484出生点 ：-64 256 伪和平无延时中继器耗材：每18格=2粘性活塞+2方块+1红石块+15红石加载终点：-5，-5154加载起点：-56，263总耗材：5468/18=304个单位，共计： 608(9组半）粘性活塞&amp;方块304（4组+48个）红石块4560(71组+16个)红石粉 累计 1824 木板 = 456(7组+8个)原木608(9组半)铁锭2432(38组)原石608+304*9+4560 = 7904(123组半)红石 2018-1-11,开始准备材料。 2018-2-11,下午3:23材料准备完成，开始无延时的布线 2018-2-11,下午5:56完工，伪和平完工（永久加载还没做）。 2020-2-4，晚9:47修复，改用村庄永久加载，FLAG帮忙纠错。 深渊 2018-3-2，深渊开始选址，中心定在-2600，1840 资料室定址位于树林中央左侧岩壁为入口，参考NGNL剧场版森精种虚空第零加护试验炉布景（刷怪率100%）； 树场 TNT模块：位置 -2963 65 1647 树场：位置 -2957 65 1676 改造工程一期效果图：","link":"/2018/01/11/2018-01-11-topologycraft/"},{"title":"无题","text":"网站vultr 优惠链接 注册什么的看视频 指令123yum install m2crypto python-setuptoolseasy_install pippip install shadowsocks 依次执行以上三条指令！！！ 接下来安装vim 1yum install vim 配置文件 1vim /etc/shadowsocks.json 关于vim的操作，这里讲几个简单的： 刚进入界面时是浏览模式，按一下i键进入编辑模式 通过光标进行移动，输入编辑就跟记事本一样 编辑结束后按esc退出编辑模式 输入:wq回车，保存退出 具体的编辑内容： 12345678910{ &quot;server&quot;:&quot;你的IP&quot;, &quot;server_port&quot;:443, &quot;local_address&quot;: &quot;127.0.0.1&quot;, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;你的密码&quot;, &quot;timeout&quot;:300, &quot;method&quot;:&quot;aes-256-cfb&quot;, &quot;fast_open&quot;: false } 接下来打开防火墙的相应端口，比如上面的就是443（一般443就可以，不用自己改）： 首先安装并开启防火墙 12&gt;yum install firewalld&gt;systemctl start firewalld 接下来开启端口 12&gt;firewall-cmd --permanent --zone=public --add-port=443/tcp&gt;firewall-cmd --reload 之后就是启动服务端： ssserver -c /etc/shadowsocks.json -d start 开启BBR加速这个是谷歌的一个加速算法，最初是用于油管视频加速的。GitHub仓库。 安装很简单，直接执行官方脚本就行： 123wget –no-check-certificate https://github.com/teddysun/across/raw/master/bbr.shchmod +x bbr.sh./bbr.sh 之后按需要重启服务器即可，亲测加速体验很好。 设置开机启动设置开机启动的方法很多，我们这里选择自定义服务文件的方法： 首先建立自定义服务文件：/lib/systemd/system/ssserver.service 内容如下： 123456789101112[Unit]Description=shadowsocks serverAfter=network.target[Service]Type=forkingExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json -d startExecReload=/usr/bin/ssserver -c /etc/shadowsocks.json -d restartExecStop=/usr/bin/ssserver -c /etc/shadowsocks.json -d stop[Install]WantedBy=multi-user.target 这里文件的具体含义如果想知道请自行百度。 接下来就是指令了： 启动SS： 1systemctl start ssserver 查看运行状态： 1systemctl status ssserver 重启SS： 1systemctl restart ssserver 停止SS： 1systemctl stop ssserver 设置开机重启： 1systemctl enable ssserver","link":"/2018/05/20/2018-05-20-none/"},{"title":"Ubuntu16.04环境下的科学上网","text":"前言笔者目前在学习过程中在Linux环境下下载一些资源的时候,由于某些众所周知的原因，资源的下载速度很慢或者甚至是基本无法下载，而在网上搜到的很多文档，要不就是如何在Linux系统下搭建SS服务端，就算是客户端很多也是语焉不详。所以倒腾了一下之后将方法分享在这里 你需要准备的： 一个SS服务器，搭建不是本文讲述的要点，请查阅 上一篇 开始首先还是下载SS，不过多阐述： 我的系统是Ubuntu的，因此使用一下指令： 12apt-get install python-pippip install shadowsocks Debian内核的其他系统同理而对于红帽内核的(例如CentOS)，则使用如下指令： 12&gt;yum install python-setuptools &amp;&amp; easy_install pippip install shadowsocks 接下来需要创建并编辑配置文件： 1sudo vim /etc/shadowsocks.json 此文件的配置与你的服务端一致，具体配置如下： { “server”:”你的IP”, “server_port”:443, “local_address”: “127.0.0.1”, “local_port”:1080, “password”:”你的密码”, “timeout”:300, “method”:”aes-256-cfb”, “fast_open”: false} 转换HTTP代理SS的代理模式默认是以Socks5模式进行的。因此在此需要转为HTTP模式的代理，首先安装Polipo： 1sudo apt-get install polipo 接下来修改配置文件： 1sudo vim /etc/polipo/config 具体配置文件内容如下： #This file only needs to list configuration variables that deviate #from the default values. See /usr/share/doc/polipo/examples/config.sample #and “polipo -v” for variables you can tweak and further information. logSyslog = false logFile = “/var/log/polipo/polipo.log” socksParentProxy = “127.0.0.1:1080” socksProxyType = socks5 chunkHighMark = 50331648 objectHighMark = 16384 serverMaxSlots = 64 serverSlots = 16 serverSlots1 = 32 proxyAddress = “0.0.0.0” proxyPort = 8123 接下来需要重启一下polipo代理： 1/etc/init.d/polipo restart 验证方法业很简单，在你的浏览器中输入127.0.0.1:8123，如果弹出了polipo的配置网页，那么就说明成功了。 开启代理首先在设置-网络设置-代理中选择代理模式为手动，在http一栏中填上127.0.0.1，端口就是上面的8123，勾选将“代理应用到全局”(大概就是叫这个，我可能记错了) 接下来在终端中开启SS代理： 1sudo sslocal -c /etc/shadowsocks.json 此时可以尝试一下浏览谷歌等界面，应该已经可以了。其他的一些比如说让代理服务后台运行啊，开机启动啊等等就不是本文讲述的了，可以自己去尝试一下。","link":"/2018/05/21/2018-05-21-ubuntuvpn/"},{"title":"idea旗舰版获取方式","text":"将如下内容加进你的host文件中（怎么改host自己百度）： 10.0.0.0 account.jetbrains.com 然后去这里点击获取注册码,剩下的就不用我教了吧 附录：IDEA常用快捷键 注释：ctrl+shit+/格式整理：ctrl+alt+l修正代码错误：alt+enter编译运行：shift+f10重命名：shift+f6main方法：psvmprint：soutfor循环体：fori还有一些其他的代码块，如果用到自己去查如果项目中存在git版本库，还有以下几个快捷键: 提交本地修改：ctrl+k将本地仓库推送到github：ctrl+shitf+k 剩下的大家自己看有什么用到的再去查一查吧","link":"/2020/12/16/2018-06-06-idea/"},{"title":"DataGrip连接远程数据库的心得","text":"首先介绍一下DataGrip这个软件，这也是一个用于数据库操作的软件，由JetBrains出品，UI和JetBrains全家桶的其他成员很相似，使用起来也很舒服。DataGrip的界面大体就是下图这样的：言归正传，最近正好做一个比赛项目需要连接远程数据库，然而翻遍了网上的教程基本上全都是连接本地数据库进行操作的，虽然自己之前试了试修改IP地址等等手段，然而结果并不成功，后来在经过尝试之后终于成功的连接上了我部署在百度云的数据库，在这里记录一下。首先是database列表窗口，可以看到现在只有一个我电脑本地的数据库连接。此使我想要连接远程的数据库，首先需要新建一个连接对象：点击database窗口左上角的”+”按钮，在弹出菜单中选择Data Source,选择你的数据库类型。我这里就是最简单的MySQL数据库，因此就以此为例：这时就会弹出 Data Sources and Drivers 对话框:接下来就可以开始设置你新的连接的参数了。首先配置General选项卡，这里的配置和连接本地数据库的配置一毛一样，不用改动。Host直接填默认的localhost就行。Database填写你的数据库名称，不过如果你使用的是默认数据库则可以不填。User和Password是你的数据库的用户名和密码，填好了之后就像下图展示的这样：此使先不要着急点Test Connection按钮，先切换到 SSH/SSL 选项卡，配置你的远程服务器信息：首先勾选 Use SSH tunnel 复选框，接下来填写你的服务器信息。Proxy host 填写你的服务器的IP地址（记得在后面的 port 里填上端口号22），Proxy user 和 Proxy password 填写服务器的登陆用户和密码，如下所示：服务器连接参数配置好了之后，再回到 General 选项卡，点击 Test Connection 按钮，连接成功：点击OK保存退出，可以看到已经连接上了我部署在百度云的MySQL数据库","link":"/2018/08/28/2018-08-28-DataGrip/"},{"title":"Android studio无法渲染xml布局的解决办法","text":"最近重装了系统，于是AS也重新安装了一下，结果创建项目之后发现不能预览布局文件了，这可不好玩，毕竟我不是脑补大师。于是查了一下资料，对比了一下以往的工程文件和Android的API，解决了之后还是在这里记录一下。作为案例这里新建一个项目。可以看到我添加了一个Button组建，然而preview窗口中并没有渲染：解决方法就是打开AndroidManifest.xml文件，注意 1android:theme=&quot;@style/AppTheme&quot; 这一字段，现在我们要做的就是查看@style/AppTheme这一配置文件，按住CTRL键点击就可以打开，打开这个styles.xml文件，关注 1&lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat.Light.DarkActionBar&quot;&gt; 将其修改为 1&lt;style name=&quot;AppTheme&quot; parent=&quot;Base.Theme.AppCompat.Light.DarkActionBar&quot;&gt; 说白了就是在前面加上Base. ：现在可以看到能成功的渲染布局了： 9月18日更新：亲测此问题是由于使用了Android API 28（也就是Android9）造成的，之前的应该没有这个问题。","link":"/2018/09/11/2018-09-11-androidsolve/"},{"title":"如何搭建自己的游戏加速器","text":"我们表面上说是加速器，实际上就是魔改了个梯子 首先，服务器系统我选择了CentOS 7，关于服务器的购买等等，请移步上一篇：无题的网站部分。 本文依据官方文档，有能力可以直接根据官方文档自行操作 加速器的话我们选择SSTAP，实际上就是要求SS服务端开启UDP转发，因此我们要安装shadowsocks-libev，与前一篇的直接安装不同，这里我们需要从源码编译，步骤如下： 安装依赖库 因为我们服务器是CentOS 7 的系统，因此执行以下指令： 1yum -y install gcc automake autoconf libtool make m2crypto autoconf libtool curl curl-devel zlib-devel openssl-devel perl perl-devel cpio expat-devel gettext-devel pcre-devel asciidoc xmlto c-ares-devel libev-devel libsodium-devel mbedtls-devel 下载源码首先，服务器安装git： 1yum install git 接下来从仓库下载最新版本的源码： 1git clone https://github.com/shadowsocks/shadowsocks-libev.git 进入该目录： 1cd shadowsocks-libev 切换子模块： 1git submodule update --init --recursive 开始编译编译分为几部分，我这里为了考虑时效性与官方文档略有差别，望周知。 1、编译安装libsodium进入根目录： 1cd shadowsocks-libev 开始编译，依次执行以下指令： 12345678export LIBSODIUM_VER=1.0.16wget https://download.libsodium.org/libsodium/releases/libsodium-$LIBSODIUM_VER.tar.gztar xvf libsodium-$LIBSODIUM_VER.tar.gzpushd libsodium-$LIBSODIUM_VER./configure --prefix=/usr &amp;&amp; makesudo make installpopdsudo ldconfig 2、编译安装MbedTLS这里跟上面差不多，首先别忘了进入根目录： 1cd shadowsocks-libev 之后开始编译，依次执行以下指令： 12345678export MBEDTLS_VER=2.6.0wget https://tls.mbed.org/download/mbedtls-$MBEDTLS_VER-gpl.tgztar xvf mbedtls-$MBEDTLS_VER-gpl.tgzpushd mbedtls-$MBEDTLS_VERmake SHARED=1 CFLAGS=-fPICsudo make DESTDIR=/usr installpopdsudo ldconfig 3、编译Shadowsocks_libev还是记得进入根目录： 1cd shadowsocks-libev 开始编译并安装： 12./autogen.sh &amp;&amp; ./configure &amp;&amp; makesudo make install 编辑配置文件并开启代理在编译结束后，仍然是在根目录下，新建配置文件： 12cd shadowsocks-libevvi conf.conf vi（vim）的使用方法： 刚进入界面时是浏览模式，按一下i键进入编辑模式 通过光标进行移动，输入编辑就跟记事本一样 编辑结束后按esc退出编辑模式 输入:wq回车，保存退出 配置文件如下，输入你自己的密码即可： 12345678{ &quot;server&quot;:&quot;0.0.0.0&quot;, &quot;server_port&quot;:443, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;你的密码&quot;, &quot;timeout&quot;:300, &quot;method&quot;:&quot;aes-256-cfb&quot;,} 之后保存退出即可。 接下来开启防火墙： 1234firewall-cmd --zone=public --add-port=443/tcp --permanentfirewall-cmd --zone=public --add-port=443/udp --permanentfirewall-cmd --reloadsystemctl restart firewalld 之后开启服务端并挂载后台运行（这里-u参数是开启UDP代理）： 1nohup ss-server -c ./conf.conf -u &gt; /dev/null 2&gt;&amp;1 &amp; 到这里代理服务端就已经结束了，不过为了使用效果起见，我们还要安装一下BBR加速。 开启BBR加速这个是谷歌的一个加速算法，安装很简单，直接执行脚本就行： 123wget –no-check-certificate https://github.com/teddysun/across/raw/master/bbr.shchmod +x bbr.sh./bbr.sh 脚本开始运行会提示按任意键继续，随便按个什么就好，之后会开始安装脚本并更新系统内核，因此可能会感觉卡住了，那是正常的，表示系统正在更新内核。 在全部结束之后，按照要求输入y并回车重启服务器即可。 服务器重启之后，记得再把代理服务端打开： 12cd shadowsocks-libevnohup ss-server -c ./conf.conf -u &gt; /dev/null 2&gt;&amp;1 &amp; 本地配置首先，如果仅仅是科学上网的话，SS客户端就够了，从GitHub仓库下载即可： https://github.com/shadowsocks/shadowsocks-windows/releases 这里下载最新的一个版本的.zip文件即可， 下载之后解压并运行，第一次应该会直接跳出服务器配置界面，如果没有的话，右键电脑右下角出现小飞机图标，并依次选择服务器--编辑服务器 ，在出现的界面中填入配置即可： 点击确定后，右键小飞机图标启用系统代理即可。 不过今天的文章是游戏加速器，而SS是无法对游戏进行加速的，因此这里我们选择了SSTAP这一软件进行加速： 安装配置SSTAP首先下载SSTAP： https://github.com/FQrabbit/SSTap-Rule/releases/download/2018.7.5/SStap-2018.7.5.exe 之后运行安装，不过这一版本有 广 告，所以我们再下载一个打包文件： https://github.com/FQrabbit/SSTap-Rule/releases/download/%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88%E6%9C%AC%E7%9A%841.0.9.7/SSTap.exe 打开你之前安装SSTap的文件夹，将刚刚下载的SSTpa.exe丢进去替换原来的文件即可。 接下来就是配置了，打开SSTap，点击加号并选择 “添加SS/SSR代理” ， 此时会跳出配置界面，当然你可以把配置再输一遍，不过我个人建议如果你已经安装了SS客户端的话，可以直接用链接导入： 右键小飞机图标，选择服务器–分享服务器配置： 将跳出来的窗口下面的链接复制下来（虽然被我涂得一团糟，不过整个图上就一个链接，我寻思你也不可能搞错吧）： 回到SSTap的界面上，点击界面最上面的图标，在跳出的弹框中将你的链接复制进去并按确定即可导入了： 配置导入后，可以点一下边上的闪电图标测试一下： 在一切测试通过后，将模式选择为不代理中国IP（且绕过局域网代理）（当然你也可以用按需要选择其他模式），点击连接按钮，开始快乐吧！","link":"/2019/01/05/2019-01-05-none02/"},{"title":"MHW日文Wiki链接","text":"怪物列表蛮鄂（アンジャナフ） 丝瓜（イビルジョー） 尸套（ヴァルハザク） 烤鱼（ヴォルガノス） 爆锤（ウラガンキン） 鹿首精（エンシェント・レーシェン） 惨爪（オドガロン） 麒麟（キリン） 钢龙（クシャルダオラ） 骚鸟（クルルヤック） 泥鱼龙（ジュラトドス） 冥灯龙（ゼノ・ジーヴァ） 熔山龙（ゾラ・マグダラオス） 记者（ツィツィヤック） 角龙（ディアブロス） 黑角（ディアブロス亜種） 炎喵（テオ・テスカトル） 大凶鄂龙（ドスギルオス） 中分哥（ドスジャグラス） 肥宅（ドドガマル） 飞雷龙（トビカガチ） 娜娜子（ナナ・テスカトリ） 咩咩子（ネルギガンテ） 浮空龙（パオウルムー） 阿爆（バゼルギウス） 毒妖鸟（プケプケ） 贝爷（ベヒーモス） 土砂龙（ボルボロス） 渣渣辉（マム・タロト） 骨锤龙（ラドバルキン） 雌火龙（リオレイア）樱火龙（リオレイア亜種） 雄火龙（リオレウス） 苍火龙（リオレウス亜種） 风飘龙（レイギエナ） 古代鹿首精（レーシェン）","link":"/2019/03/01/2019-03-01-mhwlist/"},{"title":"Minecraft Forge 1.13.2修改后的部分函数名","text":"前言跟大中一起修mod过程中记录一下这样子。 缓更。 开始记录1Minecraft.getMinecraft() 改为 Minecraft.getInstance() 123GlStateManager.color(float colorRed, float colorGreen, float colorBlue, float colorAlpha)改为GlStateManager.color4f(float colorRed, float colorGreen, float colorBlue, float colorAlpha) 本来的color方法的两个构造器（即仅传入RGB三个参数和传入RGBa四个参数）现在被分别改为了color3f和color4f。 1GlStateManager.disableDepth() 改为 GlStateManager.disableDepthTest() 1GlStateManager.enableDepth() 改为 GlStateManager.enableDepthTest() 1GlStateManager.enableAlphaTest() 改为 GlStateManager.enableAlphaTest() 123GlStateManager.translate(float x, float y, float z)改为GlStateManager.translatef(float x, float y, float z) 本来的translate方法的两个构造器（即传入三个float参数和传入三个double参数）现在分别改为了translatef和translated。 1ItemStack.getTagCompound() 改为 ItemStack.getTag() 1ItemStack.getRarity().rarityColor 改为 ItemStack.getRarity().color 1NBTTagCompound.getCompoundTag(String key) 改为 NBTTagCompound.getCompound(String key) 1NBTTagCompound.hasKey(String key, int type) 改为 NBTTagCompound.contains(String key, int type) 1NBTTagCompound.getKeySet() 改为 NBTTagCompound.keySet() 123456789GuiButton@Overridepublic void drawButton(Minecraft mc, int mouseX, int mouseY, float partialTicks) {}改为@Overridepublic void render(int mouseX, int mouseY, float partialTicks) { Minecraft mc = Minecraft.getInstance();//mc对象在内部声明} 1NBTBase 改为 INBTBase 1net.minecraft.client.resources.IResource 移至 net.minecraft.resources.IResource 1net.minecraft.client.resources.IResourceManager 移至 net.minecraft.resources.IResourceManager 存疑改动getItemDamage 原ItemStack.getItemDamage()方法删除，但原来的此方法返回的是： 123public int getItemDamage(){ return getItem().getDamage(this);} 考虑直接换为 123ItemStack stackAstackA.getItemDamage() 改为stackA.getItem().getDamage(stackA) 获取键盘输入： 弃用了 org.lwjgl.input.Keyboard 用 net.minecraft.client.util.InputMappings 进行了替换 123KeyLoader.key_F4 = new KeyBinding(&quot;FastTrading ON-OFF&quot;, Keyboard.KEY_F4, &quot;FastTrading&quot;);改为KeyLoader.key_F4 = new KeyBinding(&quot;FastTrading ON-OFF&quot;, InputMappings.getInputByName(&quot;key.keyboard.f4&quot;).getKeyCode(), &quot;FastTrading&quot;); net.minecraft.client.renderer.texture.TextureUtil.readBufferedImage: 似乎是删除了这个方法，但是此方法原来的返回是： 1234567891011public static BufferedImage readBufferedImage(InputStream imageStream) throws IOException{ BufferedImage bufferedimage; try{ bufferedimage = ImageIO.read(imageStream); }finally{ IOUtils.closeQuietly(imageStream); } return bufferedimage; } 因此考虑直接依此进行修改： 123BufferedImage bufferedimage = readBufferedImage(iresource.getInputStream());改为：BufferedImage bufferedimage = ImageIO.read(iresource.getInputStream()); 播放声音： playSound(ISound sound) 方法改为了 play(ISound sound)： 但是在改变名称之后传参类型报错了，所以做了个强制转型如下： 1mc.getSoundHandler().play((ISound) FakeSubtitleSound.getRecord(SoundEvents.ENTITY_ITEM_PICKUP, 0.5f, 0.05F, &quot;fasttrading.subtitles.buttonswitching&quot;));","link":"/2019/03/31/2019-03-31-forgeupdate/"},{"title":"CS 224N学习笔记","text":"Day1视频 简介 深度学习 是机器学习的一个分支 (让电脑自己学习,而不是你教它干什么 传统”机器”学习: 有一大堆人工设定的特征 机器其实没有学到什么 主要工作总结特征值是人工做的 电脑仅仅是做了一个数据优化 深度学习是**表征学习(representation learning)** 的一个分支[^1] 神经网络是主流的成功实现深度学习的方式,也包括概率模型等等 为什么选择深度学习 深度学习 传统机器学习 不需要手动提供特征 手动设计非常详细特征 繁琐 适应性强 训练快 需要很长时间来验证 效果好 效果一般 深度学习发展的背景 大数据的普及 计算机算力的提高 各种优秀的模型的出现 两大突破: 语音识别 图像分类 深度自然语言处理(deep NLP)将深度学习,神经网络和表征学习的思想,运用在语言理解,自然语言处理中 深度学习的作用 分析词义 以词义为起点 将一个词用向量形式表示, 一般3000+ 包括语义,词性,前后缀等等 高维向量的坐标轴没有准确的意义 为了便于展示,一般会进行降维,方法包括PCA[^2]或t-SNE[^3] 分析句子成分 找出句子结构 发现句法停顿处 分析句子含义 传统方法：通过计算各个词语的含义推断语义 deep NLP：通过向量表示语义 [^1]: 表征学习: 仅为机器提供原始的数据信号,例如视觉信号或语言信号[^2]: PCA(principal components analysis)主成分分析[^3]: 一种常用的非线性降维","link":"/2019/10/22/2019-10-22-NLP01/"},{"title":"CS 224N学习笔记","text":"Day2 词向量表示视频 词义nltk安装： 首先需要下载相关包，运行以下代码： 123import nltknltk.download() 运行之后会跳出如下界面： 如果点击all的话可能要下载很久，因此最好是需要什么下什么： 这里仅仅下载了wordnet这一包 1234567891011121314151617181920212223from nltk.corpus import wordnet as wnpanda = wn.synset('panda.n.01')hyper = lambda s: s.hypernyms()list = list(panda.closure(hyper))for i in list: print(i) &gt;&gt;&gt;Synset('procyonid.n.01')&gt;&gt;&gt;Synset('carnivore.n.01')&gt;&gt;&gt;Synset('placental.n.01')&gt;&gt;&gt;Synset('mammal.n.01')&gt;&gt;&gt;Synset('vertebrate.n.01')&gt;&gt;&gt;Synset('chordate.n.01')&gt;&gt;&gt;Synset('animal.n.01')&gt;&gt;&gt;Synset('organism.n.01')&gt;&gt;&gt;Synset('living_thing.n.01')&gt;&gt;&gt;Synset('whole.n.02')&gt;&gt;&gt;Synset('object.n.01')&gt;&gt;&gt;Synset('physical_entity.n.01')&gt;&gt;&gt;Synset('entity.n.01') 传统的NLP： 通过同义词进行归纳 由于同义词很多且较杂，无法准确的归纳出词义 使用向量表示词汇： 某个位置为1其他0 词越多向量越长 无法表示任何词语内在的联系 （因为仅仅是不同下标位置1而已） deep NLP 使用分布相似性[^1]归纳词义 通过无数个包含目标词汇的句子，寻找与目标词汇相邻的单词来表达它的意思 you shall know a word by the company it keeps[^2] 每一个词由一组密集向量组成，用以预测单词所在文本的其他词汇 这种表示方法被称为分布式表示（distributed representations） wt 指的是中心词汇 w-t 指的是除了中心词汇以外的所有词汇 Word2vec介绍目的： 选取一个词，并预测其上下文出现词汇的概率 每一个词的概率仅有一个，这个概率包括了上下文，而不是左边是什么右边是什么分别计算概率 目标函数（loss function）：=\\prod_{t=1}^{T} \\prod_{-m\\leq j\\leq m}^{ }p(w_{t+j}\\mid w_{t}i\\theta )) =-\\frac{1}{T}\\sum_{t=1}^{T} \\sum_{-m\\leq j\\leq m}^{ } \\lg 10(w_{t+j}\\mid w_{t})) 注：这里使用log函数将求连乘转化为求连加，方便计算 求概率分布：![]( https://latex.codecogs.com/gif.latex?p(o\\mid c) = \\frac{exp(u_{o}^{T}v_{c})}{\\sum_{w=1}^{v}exp(u_{w}^{T}v_{c})}) 传入参数c和o: 单词在词汇表空间中的索引及类型 带入t和t+j表示的就是单词在文本中的位置 [^1]: 分布相似性（distributional similarity）：通过上下文来得到某个词的含义[^2]: 通过单词的同伴来知道它的意义（JR Firth,英国语言学家）","link":"/2019/10/23/2019-10-23-NLP02/"},{"title":"噬血代码几种配装思路","text":"噬血代码配装一、麻痹斧枪 1、血码与装备血码带女王，武器白狼斧枪麻痹改，另一把武器随便，我这里选了刺刀枪方便赶路； 吸血牙装纯白典雅，这里重改没必要，我主要是懒得改回去； 2、技能 主动技能 （buff类），必须全有 殒命之旅 荣耀之桥 权威，增加炼血的发动速度 麻痹刻印 献祭之血 （输出类），选择三个顺手的带上即可 两断深渊 猩红螺旋 幽魂进击 战车连击 被动技能 专精斧枪 积累异常状态 速度特杀（开启殒命之旅后可触发） 提升集中力，意志力（触发权威和荣耀之桥） 3、备注道具带僵直匣，更快触发麻痹","link":"/2019/11/29/2019-11-29-codevein/"},{"title":"OSU皮肤","text":"老爷的皮肤","link":"/2019/12/18/2019-12-18-shigeskin/"},{"title":"东方全整数作记录","text":"总记录TH06 东方红魔乡 easy normal hard lunatic TH07 东方妖妖梦 easy normal hard lunatic TH08 东方永夜抄 easy normal hard lunatic TH09 東方花映塚 easy normal hard lunatic TH10 东方风神录 easy normal hard lunatic TH11 东方地灵殿 easy normal hard lunatic TH12 东方星莲船 easy normal hard lunatic TH13 东方神灵庙 easy normal hard lunatic TH14 东方辉针城 easy normal hard lunatic TH15 东方绀珠传 easy normal hard lunatic TH16 东方天空璋 easy normal hard lunatic TH17 东方鬼形兽 easy normal hard lunatic","link":"/2019/12/18/2020-02-21-touhou/"},{"title":"机床数控复习","text":"一、G代码分步解析车床代码如图所示工件，需要进行精加工，其中Φ85mm外圆不加工，毛胚为Φ85mmX340mm棒材，材料为45钢： 加工步骤 倒角 车螺纹外圆 车圆锥 车Φ62mm外圆 倒角 车Φ80mm外圆 车R70mm圆弧 车Φ80mm外圆 切槽 车螺纹 代码 代码 注释 O0003; 程序代号 N10 G50 X200.0 Z350.0; 设定工件坐标系 N20 G30 U0 W0 T0101; 换1号刀 N20 S630 M03; 主轴转速630 顺时针转动 N30 G00 X41.8 Z292.0 M08; 快速进给 N30 G01 X47.8 Z289.0 F0.15; 车倒角 N50 Z230.0; 车螺纹外圆 N60 X50.0; 车台阶 N70 X62.0 W-60.0; 车圆锥（W为Z方向增量坐标表示） N80 Z155.0; 车Φ62mm外圆 N90 X78.0; 车台阶 N100 X80.0 W-1.0; 车倒角 N110 W-19.0; 车Φ80mm外圆 N120 G02 W-60.0 R70.0; 车R70mm圆弧（顺时针方向插补） N130 G01 Z65.0; 车Φ80mm外圆 N140 X90.0; 车台阶 N150 G00 X200.0 Z350.0 T0101 M09; 退刀到坐标原点 N160 G30 U0 W0 T0202; 换2号刀 N170 S315 M03; 主轴转速315 顺时针转动 N180 G00 X51.0 Z230 M08; 快速进给 N190 G01 X45.0 F0.16; 切槽 N200 G04 X5.0; 暂停加工5S N210 G00 X51.0; 退刀 N220 X200.0 Z350.0 T0202 M09; 换3号刀 N230 G30 U0 W0 T0303; 换3号刀 N240 S200 M03; 主轴转速200 顺时针转动 N250 G00 X62.0 Z296.0 M08; 快速进给 N260 G92 X47.54 Z231.5 F1.5; 车螺纹（每次进给一定值） N270 X46.94; 车螺纹 N280 X46.54; 车螺纹 N290 X46.38; 车螺纹（以小径的为终点） N300 G00 X200.0 Z350.0 T0303 M09; 退刀回坐标原点 N310 M05; 主轴停止 N320 M30; 程序结束 已知螺纹大径D，螺距P，则小径 d=D-1.0825*P 铣床代码加工如图所示的槽，毛坯为70mm X 70mm X 16mm的板材，工件材料为45钢，六面已经过粗加工，要求精加工： 工件坐标系定在工件表面的中心点上； 选用Φ8mm键槽铣刀 圆弧插补1G02/03 X_ Y_ (R_ /I_ J_ ) F_ X:终点X坐标 Y:终点Y坐标 R:半径 I , J: I为圆弧起点与圆弧圆心的X轴方向分量，J为圆弧起点与圆弧圆心的Y轴方向分量 F:切削进给率 代码 代码 注释 O1000 程序代号 N10 G92 X35.0 Y35.0 Z100.0; 工件坐标系设定 N15 S500 M03; 主轴转速500 顺时针转动 N17 G90 G00 X14.0 Y0.0 Z1.0 M08; 快速进给至切入点（图中1处） N20 G01 Z-3.98 F100; 下刀到槽的深度 N30 G03 X14.0 Y0 I-14.0 J0; 走圆轨迹 N40 G01 X20.0; 向外走刀（至图中2处） N50 G03 X20.0 Y0 I-20.0 J0; 走圆轨迹 N60 G41 G01 X25.0 Y0 D01; 走刀至外轮廓切入点 N65 G01 Y15.0; 直线进给 N70 G03 X15.0 Y25.0 I-10.0 J0; 右上角的圆角 N80 G01 X-15.0; 直线进给 N90 G03 X-25.0 Y15.0 I0 J-10.0; 左上角的圆角 N100 G01 Y-15.0; 直线进给 N110 G03 X-15.0 Y-25.0 I10.0 J0; 左下角的圆角 N120 G01 X15.0; 直线进给 N130 G03 X25.0 Y-15.0 I0 J 10.0; 右下角的圆角 N140 G01 Y0; 直线进给 N150 G00 Z100.0 M05; 抬刀 N160 G40 X35.0 Y35.0 M09; 取消补偿 N160 M30; 程序结束","link":"/2020/06/13/2020-06-13-Gcode/"},{"title":"魔法纪录游戏音频解包随笔","text":"所用工具HCADecoder 步骤推特上有大佬公开了密钥：0000000001395C51 因此首先运行以下命令进行解密： 1.\\hca.exe -c -a 01395C51 -b 00000000 HCA文件 之后再转换即可： 1.\\hca.exe HCA文件","link":"/2020/06/14/2020-06-14-hca/"},{"title":"自动控制复习","text":"一、知识点 衡量或评价控制系统优劣的三个方面 稳定性 快速性 准确性 自动控制系统的基本控制方式可以分为哪些 开环控制 闭环控制 线性定常离散控制系统的稳定性，除了与系统的结构参数有关之外，还与什么因素有关 采样周期 根轨迹上的点应该同时满足什么条件 相角条件 幅值条件 根轨迹起始于什么，终止于什么 起始于开环极点 终止于开环零点 线性连续系统的稳态误差，除了与系统结构参数有关之外，还与什么有关 输入信号 离散系统脉冲传递函数G(z)的定义是什么 是在零初始条件下，C(z)比上R(z) $G(z)=\\frac{C(z)}{P(z)}$ 连续系统稳定的充分必要条件是什么 所有的闭环特征根具有负实部 在频率特性法中，采用什么来衡量系统的相对稳定性 幅值预料 相角预料 传递函数反映的是什么 单输入，单输出线性定常系统在零初始条件下的动态特性 惯性环节在转折频率处的模值为，相角为 $模值为 \\frac{\\sqrt{2}}{2}$ $相角为 -45^{\\circ}$ 奈奎斯特稳定判据中，Z=P-2N，其中Z代表什么，P代表什么，N代表什么 Z：闭环特征根在X右半平面的个数 P：开环极点在X右半平面的个数 N：开环幅相曲线穿越-1之左实轴的次数 稳定的线性定常系统在谐波输入下，输出的稳态分量仍然是与输入同频率的谐波函数，而幅值和相位的变化是频率ω的函数，请问频率特性的表达式怎么写，并说明频率特性、幅频特性和相频特性的定义 $幅频特性 A(w)=\\vert G(j w)\\vert$ $相频特性 A(w)=\\angle G(J w)$ $频率特性 A(w) e^{j φ^{(\\omega)}}=\\vert G(j w)\\vert e^{jG(j w)}=G(j w)=\\left.G(s)\\right\\vert_{s=j w}$ 简述频率特性的定义，并说明稳定的线性定常系统在谐波输入下输出响应与输入频率的关系 当线性系统的输入端加上一频率为ω的正弦信号时，系统的稳态输入是与输出同频率的正弦信号，其幅值和相位是频率ω的函数 $或用公式表示 C_{s}(t)=A\\vert G(j w)\\vert \\sin [w t+(G(j w)]$ 已知某二阶系统的闭环传递函数$\\varphi(s)=\\frac{4}{s^{2}+2 s+4}$，求谐振频率$\\omega_{r}$和谐振峰值$M_{r}$ 谐振频率 $\\omega_{r}=\\omega_{n} \\sqrt{1-2 \\xi^{2}} \\qquad (0 \\leq \\xi \\leq 0.707)$ 谐振峰值 $M_{r}=\\frac{1}{2 \\xi \\sqrt{1-\\xi^{2}}}$ 闭环系统$\\varphi(s)=\\frac{4}{s+2}$，如果输入信号为阶跃信号，求输出响应的调节时间 一阶系统的调节时间为3T T为将分母常数项化为一，S前面的参数，本题为$\\frac{1}{2}$ 调节时间为$\\frac{3}{2}$ 闭环系统$\\varphi(s)=\\frac{4}{s+2}$，如果输入信号为正弦信号$\\sin (2 t)$，求稳态输出 套用公式 $C_{s}(t)=A\\vert G(j w)\\vert \\sin [w t+(G(j w)]$ 已知某系统的开环传递函数$G(s)=\\frac{5}{s(s+2)}$，问它的型别和开环增益 型别：开环传递函数分母在原点处的极点个数，本题中为1，因此是1型 开环增益：去掉型别（s），常数项化为1，剩下的S取0，得到开环增益为$\\frac{5}{2}$ 已知某单位反馈系统，误差传递函数为$\\varphi_{e r}(s)=\\frac{s+1}{s+2}$，当输入为$\\sin (2 t)$时，求稳态误差 套用公式 $C_{s}(t)=A\\vert G(j w)\\vert \\sin [w t+(G(j w)]$ 二、计算题1、（2-7）求系统的传递函数C(s)，E(s)。![](/images/posts/zikong/2020-06-20 103108.png) 解： (1) $L_{1}=-G_{1} G_{2} H_{3} $ $L_{2}=G_{2} H_{2} $ $R(s) \\rightarrow C(s): P_{1}=G_{1} G_{2}, \\Delta_{1}=1 $ $\\frac{C(S)}{R(S)}=\\frac{G_{1} G_{2}}{1+G_{1} G_{2} H_{3}-G_{2} H_{2}}$ $D(s) \\rightarrow C(s): P_{1}=G_{2}, \\Delta_{1}=1 ,P_{2}=-G_{1} G_{2}H_{1}, \\Delta_{2}=1 $ $\\frac{C(s)}{D(s)}=\\frac{G_{2}-G_{1} G_{2} H_{1}}{1+G_{1} G_{2} H_{3}-G_{2} H_{2}}$ 总输出为： $C(s)=\\frac{G_{1} G_{2}}{1+G_{1} G_{2} H_{3}-G_{2} H_{2}} \\cdot R(s)+\\frac{G_{2}-G_{1} G_{2} H_{1}}{1+G_{1} G_{2} H_{3}-G_{2} H_{2}} \\cdot D(s)$ （2）$R(s) \\rightarrow E(s): P_{1}=1, \\Delta_{1}=1-G_{2} H_{2} \\\\frac{E(s)}{R(s)}=\\frac{1-G_{2} H_{2}}{1+G_{1} G_{2} H_{3}-G_{2} H_{2}} $ $D(s) \\rightarrow E(s): P_{1}=-G_{2} H_{3}, \\Delta_{1}=1, P_{2}=-H_{1}, \\Delta_{2}=1-G_{2} H_{2} $ $\\frac{E(s)}{D(s)}=\\frac{-G_{2} H_{3}-H_{1}\\left(1-G_{2} H_{2}\\right)}{1+G_{1} G_{2} H_{3}-G_{2} H_{2}}$ 总误差为： $E(s)=\\frac{1-G_{2} H_{2}}{1+G_{1} G_{2} H_{3}-G_{2} H_{2}} \\cdot R(s)+\\frac{-G_{2} H_{3}-H_{1}\\left(1-G_{2} H_{2}\\right)}{1+G_{1} G_{2} H_{3}-G_{2} H_{2}} \\cdot D(s)$ 2、（2-8）试求图示系统中的 C(s)![](/images/posts/zikong/2020-06-20 104743.png) 解： $L_{1}=-G_{1} H_{1}$ $L_{2}=-G_{1} G_{2} G_{3} H_{1} H_{2} H_{3}$ $L_{3}=G_{3} H_{3}$ $L_{1} L_{3}=\\left(-G_{1} H_{1}\\right)\\left(G_{3} H_{3}\\right)$ $R(s) \\rightarrow C(s): P_{1}=G_{1} G_{2} G_{3}, \\Delta_{1}=1; P_{2}=G_{14} G_{3}, \\Delta_{1}=1-(-G_{1} H_{1})$ $\\frac{C(s)}{R(s)}=\\frac{G_{1} G_{2} G_{3}+G_{4} G_{3}\\left[1-\\left(-G_{1} H_{1}\\right)\\right]}{1-\\left(-G_{1} H_{1}\\right)-\\left(-G_{1} G_{2} G_{3} H_{1} H_{2} H_{3}\\right)-\\left(G_{3} H_{3}\\right)-\\left(-G_{1} H_{1}\\right)\\left(G_{3} H_{3}\\right)}$ $Y(s) \\rightarrow C(s): P_{1}=G_{2} G_{3}, \\Delta_{1}=1-(-G_{1} H_{1})$ $\\frac{C(s)}{Y(s)}=\\frac{G_{2} G_{3}\\left[1-\\left(-G_{1} H_{1}\\right)\\right]}{1-\\left(-G_{1} H_{1}\\right)-\\left(-G_{1} G_{2} G_{3} H_{1} H_{2} H_{3}\\right)-\\left(G_{3} H_{3}\\right)-\\left(-G_{1} H_{1}\\right)\\left(G_{3} H_{3}\\right)}$ 总输出为： ${C(s)}=\\frac{G_{1} G_{2} G_{3}+G_{4} G_{3}\\left(1+G_{1} H_{1}\\right)}{1+G_{1}H_{1}+G_{1} G_{2} G_{3} H_{1} H_{2} H_{3}-G_{3} H_{3}+G_{1} G_{3} H_{1} H_{3}} \\cdot R(s) \\+ \\frac{G_{2} G_{3}\\left(1+G_{1} H_{1}\\right)}{1+G_{1}H_{1}+G_{1} G_{2} G_{3} H_{1} H_{2} H_{3}-G_{3} H_{3}+G_{1} G_{3} H_{1} H_{3}} \\cdot R(s)$ 3、（7-9）设离散系统如图所示，其中 T=0.1s，K=1，求 系统的闭环脉冲传递函数； 判断系统的稳定性； 系统在r(t)=t作用下的稳态误差$e^{*}(\\infty)$； ![](/images/posts/zikong/2020-06-20 105012.png) 解： ​ 系统的开环脉冲传递函数为：$G(z)=\\left(1-z^{-1}\\right) Z\\left[\\frac{1}{s^{2}(s+1)}\\right]=\\left(1-z^{-1}\\right)\\left[\\frac{T z}{(z-1)^{2}}-\\frac{\\left(1-e^{-T}\\right) z}{(z-1)\\left(z-e^{-T}\\right)}\\right]$ ​ 将T=0.1带入并整理得$G(z)=\\frac{0.005(z+0.9)}{(z-1)(z-0.905)}$， $K_{p}=\\lim _{x \\rightarrow 1}[1+G(z)]=\\lim _{x \\rightarrow 1}\\left[1+\\frac{0.005(z+0.9)}{(z-1)(z-0.905)}\\right]=\\infty$ $K_{v}=\\lim _{z \\rightarrow 1}(z-1) G(z)=\\lim _{z \\rightarrow 1}(z-1) \\frac{0.005(z+0.9)}{(z-1)(z-0.905)}=0.1$ $e(\\infty)=\\frac{T}{K_{v}}=1$ 4、（7-8）设离散系统如图所示，采样周期T=1s，$G_{h}(s)$为零阶保持器，而$G(s)=\\frac{K}{s+1}$，求：![](/images/posts/zikong/2020-06-20 160940.png) 确定使系统稳定的K的范围 设K=2，求系统在阶跃信号作用下的稳态误差 解： 思路：$G(z) \\Rightarrow \\phi(z) \\Rightarrow D(z)=0 \\quad \\Rightarrow\\left\\vert z_{i}\\right\\vert &lt;1$ （1） 5、（4-4）控制系统的开环传递函数为$G(s)=\\frac{K_{r}}{s(s+2)(s+4)}$，求： 绘制根轨迹图（写出5个步骤） 开环零、极点 实轴上的根轨迹段 根轨迹的渐近线、夹角 分离点 与虚轴的交点 判断系统临界稳定的$K_{r}$，并求等幅振荡的频率 解： （1） 开环零点、极点：$P_{1}=0，P_{1}=-2，P_{3}=-4，n=3$ 实轴上的根轨迹段：（0，-2）（-4，-$\\infty$） 渐近线交点及夹角： $\\sigma_{a}=\\frac{0-2-4}{3}=-2$ $\\varphi_{a}=\\frac{\\pm(2 k+1) \\pi}{n-m}=\\pm \\frac{\\pi}{3}=\\pm 60^{\\circ}, 180^{\\circ}$ 分离点： $\\frac{1}{d}+\\frac{1}{d+2}+\\frac{1}{d+4}=0$ $\\Rightarrow d_{1}=-0.845, d_{2}=-4.732(\\text { 舍 })$ 与虚轴交点： $s^{3}+6 s^{2}+8 s+K_{r}=0$ $s^{3}$ 1 8 $s^{2}$ 6 $K_{r}$ $s^{1}$ $48-K_{r}$ $s^{0}$ $K_{r}$ $\\mathbf{4 8}-\\boldsymbol{K}_{r}=\\mathbf{0}$ $\\Rightarrow \\boldsymbol{K}_{r}=\\mathbf{4 8}, \\boldsymbol{s}=\\pm \\mathbf{j} \\mathbf{2} \\sqrt{\\mathbf{2}}$ （2） 系统稳定的$K_{r}&lt;48$，等幅振荡频率为$\\omega=2 \\sqrt{2}$ 6、 设$G(s)=\\frac{K_{r}}{(s+2)^{2}(s+4)}$，求： 绘制根轨迹图 求系统出现阻尼振荡响应的开环增益的取值范围 解： （1） 开环零点、极点：$P_{1}=P_{2}=-2，P_{3}=-4$ n=3，m=0 n-m=3（3条渐近线） 实轴上的根轨迹段：（-4，-$\\infty$） 渐近线交点及夹角： $\\sigma_{a}=\\frac{(-2)+(-2)+(-4)}{3}=-\\frac{8}{3}$ $ \\varphi_{a}=\\frac{\\pm(2 k+1) \\pi}{3}=\\left{\\begin{array}{l}\\frac{\\pi}{3}(k=0) \\\\pi \\quad(k=1) \\\\frac{5 \\pi}{3}(k=2)\\end{array}\\right. $ 分离点： $3S^2 + 16S + 20 = 0$ $\\Rightarrow d_{1}=-6.333, d_{2}=1(\\text { 舍 })$ 此时对应的$K_{r}$值为 -43.8 与虚轴的交点： 特征方程 $(s+2)^{2}(s+4)+k_{r}=0$ $\\Rightarrow s^{3}+8 s^{2}+20 s+16 +k_{r}=0$ $s^3$ 1 20 $s^2$ 8 $16+K_{r}$ $s^1$ $\\frac{8 \\times 20 - (16+K_{r})}{8}$ $s^0$ $16+K_{r}$ $\\frac{8 \\times 20 - (16+K_{r})}{8}=0$ $\\Rightarrow K_{r}=144$，带入$8s^2 + (16+K_{r}) = 0$ ，解得： $s=\\pm j 2 \\sqrt{5}$ （2） 7、（5-12）单位反馈系统的开环传递函数为$G(s)=\\frac{K (s+3)}{s(s-1)}$，试用奈奎斯特判据确定使闭环系统稳定的K值范围 解： 1、绘制图像曲线 起点: $G(s) \\approx \\frac{3 k}{-s}, \\quad \\infty &lt; -270^{\\circ}$ ; 终点:$ G(s) \\approx \\frac{k}{s}, 0 &lt; -90^{\\circ}$ ; 交点：分子分母同乘以(s+1), $G(s)=\\frac{k\\left(s^{2}+4 s+3\\right)}{s\\left(s^{2}-1\\right)}$ $G(j \\omega)=\\frac{k\\left[\\left(3-\\omega^{2}\\right)+j 4 \\omega\\right]}{-j \\omega\\left(\\omega^{2}+1\\right)}$ $G(j \\sqrt{3})=-k$ ![](/images/posts/zikong/2020-06-20 125139.png) 2、求K值范围 令 z=p-2N=1-2N=0，N 必须为 0.5，由图可见 k&gt;1 即可 8、（5-14）某最小相位系统的开环对数幅频特性如图所示，要求：![](/images/posts/zikong/2020-06-20 130244.png) 写出系统的开环传递函数 求截止频率及相位裕量$\\gamma$ 解： （1）由图可得 $G(s)=\\frac{10}{s(10 s+1)(0.05 s+1)}$ （2）由近似方法求截止频率： $G(s) \\approx \\frac{1}{s^{2}},$ 令 $\\left\\vert\\frac{1}{s^{2}}\\right\\vert=1$ 得 $\\omega_{c}=1$ $\\gamma=180^{\\circ}-90^{\\circ}-\\operatorname{tg}^{-1} 10-\\operatorname{tg}^{-1} 0.05=2.848^{\\circ}$ 9、二阶系统的结构框图如下，求 输入信号 r(t) = 1(t) 时，若超调量为20%，调节时间为1.8，求参数$K_{1}，K_{2}$ 输入信号 r(t) = 2+t 时，求系统的稳态误差 解： 闭环传递函数： 10、系统结构如图所示，求： 用奈氏判据判断系统稳态 当 K &lt; 4 时，求超调量及调节时间 当输入信号为 2(1+t）时，若稳态误差为0.25，求K 解： $G(s)=\\frac{\\frac{k_{1}}{s^{2}}}{1+\\frac{k_{1}}{s^{2}} \\cdot k_{2}s}=\\frac{k_{1}}{s^{2}+k_{1} k_{2} s}$ $\\phi(s)=\\frac{k_{1}}{s^{2}+k_{1} k_{2} s+k_{1}}$ $\\alpha %=e^{-\\frac{\\pi \\xi}{\\sqrt{1-\\xi ^ 2}}} \\times 100 %=20 %$","link":"/2020/06/17/2020-06-17-ziokng/"},{"title":"微分中值定理相关证明题","text":"微分中值定理相关证明题 微分中值定理是联系函数与导数的桥梁 几种典型题型1、借助中值定理求极限 拉格朗日定理 形如f(a)-f(b)的形式，可以通过拉格朗日定理转化为f(a)-f(b)=f'(ξ)(a-b) 例：arctan(a)-arctan(b) 泰勒公式 2、证明 f’(ξ)=0 或 f”(ξ)=0 通常使用罗尔定理证明 证明 f’(ξ)=0 证明存在 f(a)=f(b)； 进而证明存在 ξ 使得 f’(ξ)=0 证明 f”(ξ)=0 证明存在 f(a)=f(b)=f(c)； 证明存在 f’(ξ1)=f’(ξ2)=0； 进而证明 存在 η 使得 f”(η)=0 一般来说，证明f(a)=f(b)=f(c)的方法有 介值定理 零点存在定理 积分中值定理 当罗尔定理无法证明时，尝试使用费马引理证明 3、证明 G[f’(ξ), f(ξ), C]=0（导数，函数，常数在一点的等式）通过： 观察 将方程两端求导 求解微分方程 构建辅助函数，进而通过罗尔定理求证。 4、涉及到两个函数的问题使用柯西中值定理进行证明 5、双介值问题 介值不能相同 用两次拉格朗日中值定理进行证明 介值可以相同 考虑使用拉格朗日中值定理和柯西中值定理进行证明 6、二阶及高阶导数泰勒中值定理","link":"/2020/08/06/2020-08-06-gaoshu01/"},{"title":"搬运组数据库API说明","text":"搬运组API说明文档仅供组内相应开发使用。 需要验证密钥，密钥请在群内私聊我。 API链接：http://api.aye10032.com:5000/ 获取信息（GET）videos 字段 类型 必填 说明 id int false 视频对应的ID，若填写则无视下面所有字段，直接返回该ID对应的视频信息 has_done int true 0：返回未完工的视频列表 1：返回所有视频列表 need_trans int true 0：返回所有未完工视频信息 1：返回需要翻译的视频列表 返回值 返回字段 类型 说明 ID int 视频ID，每个视频的唯一标识 URL string 视频的源链接 HASDONE int 0：未完工 1：已完工 NEEDTRANS int 0：不需要翻译 1：需要翻译 ISTRANS int 0：未开始翻译 1：已有人开始承接翻译 FROMEQQ int 添加此视频的QQ号 DESCRIPTION string 对此视频搬运的描述 TIME date 搬运（翻译）需求添加的时间 translate 字段 类型 必填 说明 id int true 需要查询的视频的ID 返回值 返回字段 类型 说明 FROMID int 该翻译信息所属视频的ID FROMQQ int 翻译承接人QQ MSG string 翻译承接人备注信息（承接时间段） TIME date 信息添加时间 修改信息new_video 字段 类型 必填 说明 url string true 视频链接 description string true 搬运描述 need_trans int true 0：不需要翻译 1：需要翻译 from_qq int true 添加此视频的QQ号 key string true 密钥字符串 返回值 200 添加成功 401 密钥验证错误 update 字段 类型 必填 说明 id string true 需要修改的视频的ID has_done int true 0：未完工 1：已完工 is_trans int true 0：未开始翻译 1：已有人开始承接翻译 key string true 密钥字符串","link":"/2020/10/13/2020-10-13-apidoc/"},{"title":"马原答辩大纲","text":"马原汇报联系与发展（辩证法的两大总特征）联系的普遍性 任何事物同其他事物都处于一定的联系之中 整个世界是互相联系统一的一个整体 联系的客观性 联系是事务本身固有的 联系的多样性、条件性 分析事物的具体联系，确立整体性、开放性的观点，从动态中考察事物的普遍联系 五对范畴其二（普遍性）必然与偶然 揭示事物发展趋势（一方面） 必然性存在于偶然性之中 偶然是必然的表现方式 认识论相关 认识世界与改造世界相互依赖、相互制约、辩证统一 只有在认识必然性的基础上才有自由的活动 一切从实际出发、实事求是 原因-结果、现象-本质不再赘述 量变与质变 量变是质变的必要准备 质变是量变的必然结果 指导从事实践活动的重要思想原则 唯物史观人民群众在历史发展中的作用 人民群众是历史的创造者 人民群众起着决定性的作用 人民群众是社会实践的主体 个人在历史中的作用 历史是无数人合力的作用 历史人物是领导者 体现了偶然性与必然性的统一 科学技术在社会发展中的作用 科技是一把双刃剑 科学技术对生产生活方式产生了巨大的影响 科学技术推动了思维方式的变革 正确把握科学技术的社会作用","link":"/2020/10/27/2020-10-27-%E9%A9%AC%E5%8E%9F/"},{"title":"历史上的两次大论战","text":"近代史上的两次论战一、维新派与守旧派（洋务派）的论战论战主要围绕以下三个问题展开: 要不要变法 要不要兴民权、设议院，实行君主立宪 要不要废八股、改科举（不是废科举）和兴西学 意义: 这场论战是资产阶级思想与封建主义思想在中国的第一次正面交锋； 它进一步开阔了新型知识分子的眼界,解放了人们长期受到束缚的思想； 通过论战,西方资产阶级社会政治学说在中国得到进一步的传播。 二、关于革命与改良的辩论围绕中国究竟是采用革命手段还是改良方式这个问题，革命派与改良派分别以《民报》、《新民丛报》 为主要舆论阵地，展开了一场大论战。 双方论战涉及的核心问题主要有三个: 要不要以革命手段推翻清王朝，这是双方论战的焦点。 要不要推翻帝制，实行共和。 要不要进行社会革命。 意义: 划清了革命与改良的界限，传播了民主革命思想， 促进了革命形势的发展， 但这场论战也暴露了革命派在思想理论方面的弱点。","link":"/2020/11/09/2020-11-09-lunzhan/"},{"title":"历史上的土地政策","text":"历史上各个时期不同阶级的土地政策一、农民阶级太平天国运动《天朝田亩制度》 耕者有其田 进步性: 《天朝田亩制度》的主张,从根本上否定了封建社会的基础即封建地主的土地所有制 （没有废除） 局限性: 没有超出农民小生产者的狭隘眼界 具有不切实际的空想性质 并未付诸实施 二、资产阶级辛亥革命三民主义 民生主义 即社会革命,指的是“平均地权“，也就是核定全国土地的地价， 其现有之地价，仍属原主; 革命后的增价，则归国家，为国民共享 局限性 “平均地权”并非将土地所有权分给农民，没有正面触及封建土地所有制 不能满足广大农民的土地要求，在革命中难以成为发动广大工农群众的理论武器 三、共产党土地革命时期井冈山土地法 第一个土地法 兴国土地法 将没收一切土地改为“没收一切公共土地及地主阶级的土地” 依靠贫农、雇农；联合中农；限制富农；保护中小工商业者；消灭地主阶级 以乡为单位，按人口平分土地（耕者有其田） 第一个可以付诸实施的比较完整的土地革命路线和纲领","link":"/2020/11/09/2020-11-09-tudi/"},{"title":"树莓派安装python3+OpenCV4.0","text":"树莓派安装python3+OpenCV4.0 2020-11-28更新：现在，contrib版本已经可以直接通过pipy安装，详见：[五、直接安装](## 五、直接安装) 本教程特指通过源码编译安装 一、树莓派配置1、换源123456# 编辑 `/etc/apt/sources.list` 文件，删除原文件所有内容，用以下内容取代：deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contrib rpideb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contrib rpi# 编辑 `/etc/apt/sources.list.d/raspi.list` 文件，删除原文件所有内容，用以下内容取代：deb http://mirrors.tuna.tsinghua.edu.cn/raspberrypi/ buster main ui 编辑器推荐使用nano，例如： 1sudo nano /etc/apt/sources.list 编辑完毕后 CTRL+O 保存、CTRL+X 退出。 更新源列表： 12sudo apt-get updatesudo apt-get -y dist-upgrade 2、安装screen1sudo apt-get install screen screen可以让进程在后台挂起，方便后面编译时脱机编译 3、修改交换分区及显存1sudo nano /etc/dphys-swapfile 选择将交换分区大小设为内存的两倍，即： 123# set size to computed value, this times RAM size, dynamically adapts,# guarantees that there is enough swap without wasting disk space on excessCONF_SWAPFACTOR=2 并将其他的配置注释掉。 重启服务： 12sudo /etc/init.d/dphys-swapfile stopsudo /etc/init.d/dphys-swapfile start 之后检查是否修改成功： 1free -m 若看到类似如下信息，则说明修改成功： 修改显存： 1sudo nano /boot/config.txt 将 gpu_mem 设为128 1gpu_mem=128 （可以适当的再改大一点） 重启树莓派： 1sudo reboot 二、安装依赖1、OpenCV前置依赖git： 1sudo apt-get install git 编译工具： 12sudo apt-get install cmakesudo apt-get install gcc g++ 图形界面、媒体、编码等依赖： 12sudo apt-get install libavcodec-dev libavformat-dev libswscale-devsudo apt-get install libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev GTK支持： 1sudo apt-get install libgtk2.0-dev libgtk-3-dev 图片解码： 12345sudo apt-get install libpng-devsudo apt-get install libjpeg-devsudo apt-get install libopenexr-devsudo apt-get install libtiff-devsudo apt-get install libwebp-dev 2、python相关安装python3： 1sudo apt-get install python3-dev 执行以下指令，检查是否有安装pip： 1pip3 -h 若没有安装，则安装pip3： 1sudo apt-get install python3-pip 安装 numpy 和 scipy： 1sudo pip3 install numpy scipy 3、建立后台进程接下来的编译过程会持续较长时间，且几乎吃满树莓派的CPU，建议使用screen专门创建一个后台用于编译： 1screen -S cv 这里后面的cv可以说任意你喜欢的名字，记住就好。 之后想要退出此后台，按组合键：CTRL+A+D； 想要重新切入这个后台，输入： 1screen -r cv 后面的名字就是之前你输入的那个 这样，当进行下面耗时较长的步骤时，可以在进程中执行，执行完指令后按CTRL+A+D退出进程，即可关闭SSH链接，不用保持一直打开，编译仍可以在后台运行。 三、正式编译首先分别下载两个源码： 12git clone https://github.com/opencv/opencv.gitgit clone https://github.com/opencv/opencv_contrib.git 若git下载缓慢，可以用gitee进行转载： 之后只要将仓库代码换为gitee上你down下来的仓库地址即可： 下载下来后，在应该存在两个文件夹，分别名为opencv和opencv_contrib。 建立编译文件夹： 123cd ~/opencv/ # 这里是opencv本体源码的文件夹，请根据你的实际路径加以调整mkdir buildcd build 添加编译配置信息： 123456cmake -D CMAKE_BUILD_TYPE=RELEASE \\ -D CMAKE_INSTALL_PREFIX=/usr/local \\ -D INSTALL_C_EXAMPLES=OFF \\ -D INSTALL_PYTHON_EXAMPLES=OFF \\ -D OPENCV_EXTRA_MODULES_PATH=/home/pi/opencv_contrib/modules \\ # 这里是contrib文件夹所在路径，请根据你的实际路径加以调整 -D BUILD_EXAMPLES=OFF .. 配置完成后，开始编译： 1make -j4 这里是使用4个线程进行编译，理论上树莓派4的性能应该是可以支持8线程的，可以将后面参数改为 -j8 编译结束后，开始安装： 123sudo make installsudo ldconfigsudo apt-get update 之后重启系统： 1sudo reboot 四、可能问题若安装完成后import cv2仍然报错，可以考虑手动拷贝文件： 12cd ~/opencv/build/lib/python3sudo cp cv2.cpython-37m-arm-linux-gnueabihf.so /usr/local/lib/python3.7/dist-packages/cv2.so 这里的文件路径及python版本根据实际情况进行相应修改即可。 五、直接安装若要安装原生opencv，则直接运行： 123pip install opencv-python或pip3 install opencv-python 若需要人脸识别、图像识别等额外功能，则运行： 123pip install opencv-contrib-python或pip3 install opencv-contrib-python 注意，这两个版本的opencv仅可同时安装一个 可以通过 123pip list或pip3 list 来查看已安装的包，若已经安装了另一个版本，可以通过 1pip|pip3 uninstall [包名] 来卸载已经安装的opencv。 参考文档：【1】: OpenCV官方文档 【2】: installing opencv4.0 on raspberrypi 3b 【3】: opnecv_contrib文档 【4】: 清华大学开源镜像站 【6】: pypi说明界面","link":"/2020/11/12/2020-11-12-opencvonpi/"},{"title":"毛泽东的各个著作","text":"毛泽东的文章与著作 一、大革命时期1、《国民革命与农民运动》 农民运动乃国民革命的**中心问题** 所谓国民运动，其大部分即是农民运动 二、土地革命时期1、《中国的红色政权为什么能够存在？》和《井冈山的斗争》 论证了红色政权能够长期存在并发展的主客观条件 提出了工农武装割据的思想 2、《星星之火，可以燎原》 农村包围城市，武装夺取政权的**革命道路** 3、《反对本本主义》 坚持辩证唯物主义，坚持理论与实际相结合的重要性 “没有调查，就没有发言权” 农村包围城市，武装夺取政权的提出，指明了中国革命唯一正确的道路 标志着中国化的马克思主义，即**毛泽东思想的初步形成** 4、《矛盾论》、《实践论》 批评了党内的主观主义，尤其是教条主义错误 论证了马列主义与中国具体实际相结合的原则 阐明了党的马克思主义**思想路线** 三、抗日战争时期","link":"/2020/11/13/2020-11-13-mao/"},{"title":"近代史上的宪法","text":"历史上各个时期的宪法一、晚清时期”清末新政“《钦定宪法大纲》 二、辛亥革命《中华民国临时约法》临时参议院（不是临时政府）颁布《中华民国临时约法》。 这是中国历史上第一部具有资产阶级共和国宪法性质的法典，它规定了资产阶级共和国的国家、政府组织机构以及人民享有的各项民主权利。 《临时约法》规定，“中华民国之 主权属于国民全体”。 评价: 进步性： 《临时约法》 是革命的产物，带有鲜明的革命性、民主性。 它不仅具有现实的进步意义，在中国宪政史上也占有重要的地位。 局限性： 企图用承认清政府与列强所订的一切不平等条约和清政府所欠的一切外债，来换取列强承认中华民国。 没有提出任何可以满足农民土地要求的政策和措施，反而去维护封建土地制度以及官僚、地主所占有的土地和财产。 三、土地革命《中华苏维埃共和国宪法大纲》共产党的第一部宪法","link":"/2020/11/13/2020-11-13-xianfa/"},{"title":"中国共产党的会议","text":"中共的重要会议 时间表 时期 标志性事件 统一战线 1925-1927 大革命时期 五卅运动 国民革命统一战线 1927-1937 土地革命战争时期 八七会议 工农民主统一战线 1937-1945 抗日战争时期 1945-1949 一、中共一大代表着中国共产党的建立 二、中共二大 反帝反封建的民主革命纲领（分清敌友，即不反资） 群众路线的**革命方法** 三、中共三大 第一次国共合作 党员以个人身份加入国民党 四、八七会议 清算了陈独秀的右倾机会主义错误（太依赖资产阶级） 确立了土地革命和武装反抗国民党反动派的总方针 土地革命是资产阶级民主革命的中心问题 毛主席：“枪杆子里出政权“ 为挽救党和革命做出重大贡献 从大革命失败到土地革命战争兴起的转折 五、中华苏维埃第一次全国工农兵代表大会 通过了《中华苏维埃共和国宪法大纲》 成立了中华苏维埃临时政府，毛泽东任主席（中国共产党**有了自己的政权**） 实行工农兵代表大会制度 六、遵义会议 解决了军事问题和组织问题 开始确立以毛泽东为代表的马克思主义正确路线的领导地位 为挽救党和革命做出重大贡献 中国共产党在政治上开始走向成熟","link":"/2020/11/13/2020-11-13-zghuiyi/"},{"title":"windows terminal + power shell调教手册","text":"windows terminal + power shell调教手册一、安装 windows terminal 和 power shell 7windows terminal直接在应用商店里搜索安装即可： 之后安装新版的power shell： 可以参考官方文档 全部安装好之后，从开始菜单打开power shell7，以管理员身份启动： 下面的操作，除非特殊说明，记得都要以管理员身份运行。 二、安装Chocolatey^1Chocolatey是一个Windows下的包管理系统，我们下面的很多插件等都需要使用他来进行安装，安装非常简单，只需要在power shell中执行： 1Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')) 即可完成安装： 在下面的过程中，若碰到使用Choco命令安装软件包时出现超时报错的，可以考虑为Choco设置代理： 1choco config set proxy http://127.0.0.1:1080 三、安装oh-my-posh^2目前，只要安装了Windows terminal就可以直接安装oh-my-posh了。 注意，下面的操作一定是在以管理员身份运行的power shell中进行！ 1、安装microsoft-windows-terminal包：1choco install microsoft-windows-terminal 之中会碰到询问是否运行安装脚本，输入A（意为全部同意），回车 2、分别安装posh-git和oh-my-posh：12Install-Module posh-git -Scope CurrentUserInstall-Module oh-my-posh -Scope CurrentUser 同理，若网络条件不佳导致安装失败，可以考虑通过代理安装： 12Install-Module posh-git -Scope CurrentUser -Proxy &quot;http://127.0.0.1:1080&quot;Install-Module oh-my-posh -Scope CurrentUser -Proxy &quot;http://127.0.0.1:1080&quot; 同样，按A，继续运行安装 3、安装PSReadLine1Install-Module -Name PSReadLine -AllowPrerelease -Scope CurrentUser -Force -SkipPublisherCheck 4、生成配置文件12if (!(Test-Path -Path $PROFILE )) { New-Item -Type File -Path $PROFILE -Force }notepad $PROFILE 第一行代码运行之后，即可通过第二行代码打开配置文件 在此配置文件中输入如下信息： 123Import-Module posh-gitImport-Module oh-my-poshSet-Theme Paradox 最后一行为主题，你也可以换成你自己喜欢的主题[^3] 之后运行此代码，使配置文件生效： 1set-executionpolicy remotesigned 5、安装支持字体由于主题涉及到一些特殊字符，因此需要安装支持这些特殊字符的字体， oh-my-posh官方文档中推荐的是Meslo LG M Regular for Powerline Nerd Font 当然，你也可以前往这个字体所在的GitHub项目[^4]选择其他自己喜欢的字体下载。 右键power shell标题栏，选择默认项，将字体改为刚刚安装的MesloLGM Nerd Font Mono 重新打开power shell，可以看到主题已经成功加载出来了 四、编辑Windows terminal配置文件刚刚仅仅是修改了power shell的配置，但是打开Windows terminal可以看到字体仍然没有加载，且默认的终端也不是刚刚安装的power shell7，而是旧版的power shell，此时就需要修改Windows terminal配置文件[^5]。 点击标签栏的剪头，选择设置，自动打开配置文件 此时在你的”profiles”的列表中应该有默认的四个配置，从上到下分别为默认power shell、CMD、Azure Cloud Shell、和刚刚安装的power shell7 1、设置power shell字体选择PowerShell，为其添加字体和字号颜色等配置： 12345&quot;colorScheme&quot;: &quot;Campbell&quot;,&quot;useAcrylic&quot;: true,&quot;closeOnExit&quot;: false,&quot;acrylicOpacity&quot;: 0.8,&quot;fontFace&quot;: &quot;MesloLGM Nerd Font Mono&quot; 记得不是最后一行的要加逗号 这里如果不清楚字体名字，可以参考上一步power shell配置中选择的那个名字 2、设置默认终端为power shell7在配置文件的开头处，将defaultProfile改为power shell7的guid即可，如下图所示： 此时载打开Windows terminal，可以看到界面已经焕然一新： 3、修改（添加）默认快捷键：你可以根据官方文档[^6]自己修改，也可以直接参考我给出的这份配置文件： 12345678910111213141516171819202122232425&quot;actions&quot;: [ { &quot;command&quot;: {&quot;action&quot;: &quot;copy&quot;, &quot;singleLine&quot;: false }, &quot;keys&quot;: &quot;ctrl+c&quot; }, { &quot;command&quot;: &quot;paste&quot;, &quot;keys&quot;: &quot;ctrl+v&quot; }, { &quot;command&quot;: &quot;find&quot;, &quot;keys&quot;: &quot;ctrl+shift+f&quot; }, { &quot;command&quot;: &quot;newTab&quot;, &quot;keys&quot;: &quot;ctrl+n&quot; }, { &quot;command&quot;: &quot;closeTab&quot;, &quot;keys&quot;: &quot;ctrl+shift+w&quot; }, { &quot;command&quot;: &quot;closePane&quot;, &quot;keys&quot;: &quot;ctrl+delete&quot; }, {&quot;command&quot;: { &quot;action&quot;: &quot;splitPane&quot;, &quot;split&quot;: &quot;auto&quot;, &quot;splitMode&quot;: &quot;duplicate&quot; },&quot;keys&quot;: &quot;alt+[&quot;}, {&quot;command&quot;: { &quot;action&quot;: &quot;moveFocus&quot;, &quot;direction&quot;: &quot;up&quot; },&quot;keys&quot;: &quot;alt+up&quot;}, {&quot;command&quot;: { &quot;action&quot;: &quot;moveFocus&quot;, &quot;direction&quot;: &quot;down&quot; },&quot;keys&quot;: &quot;alt+down&quot;}, {&quot;command&quot;: { &quot;action&quot;: &quot;moveFocus&quot;, &quot;direction&quot;: &quot;left&quot; },&quot;keys&quot;: &quot;alt+left&quot;}, {&quot;command&quot;: { &quot;action&quot;: &quot;moveFocus&quot;, &quot;direction&quot;: &quot;right&quot; },&quot;keys&quot;: &quot;alt+right&quot;}, {&quot;command&quot;: { &quot;action&quot;: &quot;resizePane&quot;, &quot;direction&quot;: &quot;up&quot; },&quot;keys&quot;: &quot;ctrl+alt+up&quot;}, {&quot;command&quot;: { &quot;action&quot;: &quot;resizePane&quot;, &quot;direction&quot;: &quot;down&quot; },&quot;keys&quot;: &quot;ctrl+alt+down&quot;}, {&quot;command&quot;: { &quot;action&quot;: &quot;resizePane&quot;, &quot;direction&quot;: &quot;left&quot; },&quot;keys&quot;: &quot;ctrl+alt+left&quot;}, {&quot;command&quot;: { &quot;action&quot;: &quot;resizePane&quot;, &quot;direction&quot;: &quot;right&quot; },&quot;keys&quot;: &quot;ctrl+alt+right&quot;}, {&quot;command&quot;: &quot;scrollUp&quot;,&quot;keys&quot;: &quot;ctrl+up&quot;}, {&quot;command&quot;: &quot;scrollUpPage&quot;,&quot;keys&quot;: &quot;ctrl+shift+up&quot;}, {&quot;command&quot;: &quot;scrollDown&quot;,&quot;keys&quot;: &quot;ctrl+down&quot;}, {&quot;command&quot;: &quot;scrollDownPage&quot;,&quot;keys&quot;: &quot;ctrl+shift+down&quot;} ] 主要一个要说的就是分割窗口： 通过alt+[来分割窗口 通过 alt+上下左右 来切换到不同的窗口（也可以直接通过鼠标点击） 在对应的窗口通过 ctrl+alt+上下左右 来调整大小 五、使用设置及插件安装1、自动补全扩展同理，通过 1notepad $PROFILE 打开power shell配置文件，在下面添加一行： 1Set-PSReadlineKeyHandler -Key Tab -Function MenuComplete 这样当使用Tab补全时，会可视化的列出补全选项，且可以直接通过光标选择 2、文件检索插件fzf首先通过Chocolatey安装fzf： 1choco install fzf 接下来安装power shell支持： 1Install-Module PSFzf 之后打开配置文件： 1notepad $PROFILE 在配置文件中禁用默认的配置方案，并导入模块。 添加： 123Import-Module PSFzfRemove-PSReadlineKeyHandler 'Ctrl+r' 此时可以通过在需要查询的文件夹中按 Ctrl+t 打开搜索功能 六、将Windows terminal添加到右键菜单[^7]直接安装： 1Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/lextm/windowsterminal-shell/master/install.ps1')) 这一步若因网络原因导致无法从GitHub下载文件，可以考虑采用以下指令来为power shell设置全局代理： 12Set-Item Env:http_proxy &quot;http://127.0.0.1:1080&quot;Set-Item Env:https_proxy &quot;http://127.0.0.1:1080&quot; 之后想要取消代理，则执行： 12Remove-Item Env:http_proxyRemove-Item Env:https_proxy 执行之后，可以看到现在的右键菜单中已经有了Windows terminal。 参考文献：[^3]:oh-my-posh 主题样例[^4]: nerd-fonts项目仓库[^5]:Windows terminal配置文档[^6]:Windows terminal快捷键指令文档[^7]:windowsterminal-shell","link":"/2020/11/15/2020-11-15-winterminal/"},{"title":"mermaid常用公式","text":"mermaid常用公式摘自官方文档 Flowchart12345graph TD; A--&gt;B; A--&gt;C; B--&gt;D; C--&gt;D; graph TD; A-->B; A-->C; B-->D; C-->D; Sequence diagram1234567891011sequenceDiagram participant Alice participant Bob Alice-&gt;&gt;John: Hello John, how are you? loop Healthcheck John-&gt;&gt;John: Fight against hypochondria end Note right of John: Rational thoughts &lt;br/&gt;prevail! John--&gt;&gt;Alice: Great! John-&gt;&gt;Bob: How about you? Bob--&gt;&gt;John: Jolly good! sequenceDiagram participant Alice participant Bob Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts prevail! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! Gantt diagram12345678910ganttdateFormat YYYY-MM-DDtitle Adding GANTT diagram to mermaidexcludes weekdays 2014-01-10section A sectionCompleted task :done, des1, 2014-01-06,2014-01-08Active task :active, des2, 2014-01-09, 3dFuture task : des3, after des2, 5dFuture task2 : des4, after des3, 5d gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d Class diagram1234567891011121314classDiagramClass01 &lt;|-- AveryLongClass : CoolClass03 *-- Class04Class05 o-- Class06Class07 .. Class08Class09 --&gt; C2 : Where am i?Class09 --* C3Class09 --|&gt; Class07Class07 : equals()Class07 : Object[] elementDataClass01 : size()Class01 : int chimpClass01 : int gorillaClass08 &lt;--&gt; C2: Cool label classDiagram Class01 C2 : Where am i? Class09 --* C3 Class09 --|> Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 C2: Cool label Git graph - experimental12345678910111213141516gitGraph:options{ &quot;nodeSpacing&quot;: 150, &quot;nodeRadius&quot;: 10}endcommitbranch newbranchcheckout newbranchcommitcommitcheckout mastercommitcommitmerge newbranch gitGraph: options { \"nodeSpacing\": 150, \"nodeRadius\": 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch Entity Relationship Diagram - experimental1234erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses User Journey Diagram123456789journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me","link":"/2020/11/15/2020-12-07-mermaid/"},{"title":"Markdown闲谈","text":"Markdown是什么，我为什么要选择Markdown蠢货，自己百度去。 Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。所谓的标记语言，指的是讲文本的内容和格式一起记录在文本信息中的编码格式，比较有名的标记语言有HTML，XML(office中的docx、xlsx、pptx都是基于XML)，以及我们几天要讲的Markdown。只说概念是没有用的，那么我们为什么要选择Markdown呢？在这之前，先来看一下Markdown的写作效果吧。下面是我之前一篇博客的截图，左边是我实际写的东西，右边是预览：嗯，可以看出来一些Markdown的特点了吧(看不出来的都叉出去),是的，与常用的word文档不同，文本的格式，甚至包括段落都是直接以特定的字符串来表现出来的，有点类似转义字符，但是还是有一定区别的。这个以后再讲。而这也正是markdown的比较方便的所在。它既可以表现出文字、段落格式，又是一个轻量化的文本编辑格式，打开读取都非常的迅速，几乎不占内存。好了，废话一堆，讲了这么多还是直接进入正题吧。 用什么来编辑Markdown我这里推荐vscode和typora 其中前者是一个经典的非常好用的轻量级编辑器，支持各种代码的编辑。而后者是一个Markdown专用编辑器，免费，轻量级，而且功能非常之全面，炒鸡好用。那么对于vscode来讲，也许添加几个插件能够帮助你更加方便的编辑。按下Ctrl+shift+k打开扩展商店，我这里建议添加下面几个插件：Markdown shortcuts(添加了一些md语言中常用的快捷键Auto-Open Markdown Preview(能够在界面的左侧实时预览编辑效果)；Markdown All in One(我也不知道具体包含了啥，但装了总没错)。 而对于typora来说，你只需要熟悉一下快捷键，就已经没有什么好怕的了 Markdown常用语法本文是基于Markdown的简体中文说明概括而来，如果不嫌麻烦也可以去原网址查看对于Markdown来说，文本的格式有两个基本单位。一个是段落，一个是字体。这个倒是没什么好说的，但是我们需要搞清楚所谓的段落到底是怎么定义的。 段落在讲段落之前，我们要先讲一下Markdown之中一个稍微有些特殊的地方，也就是他的空白符。在先了解了Markdown的这一特殊之处后，我们再来讲段落。 空白符与换行Markdown中有三个常见的空白符：平行制表符(Tab)、空格(Space)和换行(Enter)。而一个Tab相当于四个Space。然而一般情况下，无论你打了多少个空格或者Tab，最后渲染出来的终究只有一个空格，就像这样,我这样输入： a&nbsp;&nbsp;b&nbsp;&nbsp;&nbsp;&nbsp;c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d 但是最后渲染出来的还是只有一个空格: a b c d 如下图同理，在Markdown中你只按一下Enter是不能做到换行的，即使他看上去像是换了。直接上图：这里c后面我是敲了一个空格的，但是渲染出来并没有显示那么，正确的换行姿势是什么呢? 正确的姿势是在要换行的两个字符之间先敲两个Space之后再敲Enter就可以了，就像下图：可以看到我在c后面加上了两个空格，就完成了换行上面我们讲过，一般来说无论你敲多少个空格，最终渲染出来的也只有一个，同理,换行也是这样的，无论你打多少个回车，最终渲染出来的还是只有一个换行:不过这里同时也显示了另外一种换行方式，即当两行之间有一个或多个空行时，无论上一行末尾有没有两个空格，渲染均会进行换行操作 空格和换行的非一般操作那么有人可能要问了，难道我就没有办法去输出多个空格或者换行吗？当然有。我们前面说过Markdown是一种跟HTML相似的标记语言，这里我们就可以运用”&amp;nbsp;“和”&lt;br&gt;“来达成多个空格和换行的效果:这个学过HTML就应该知道了，我就不在另外论述。 空行和段落讲完了空白符，就该讲一下什么是段落了。我们在上面讲了两种换行方式，一种是在句末加上两个空格之后回车，一种是在两行之间加上一个空行。那么什么是空行呢？在Markdown当中，只要这一行看上去没有东西，它就算一个空行。哪怕在这一行当中我打了几个空格或者Tab，他也算是一个空行。而段落的标志就是空行。段落与段落之间用空行进行间隔，如下图：知道了什么是段落之后，我们就可以正式的来讲一讲Markdown语法了。 段落格式段落格式，顾名思义就是针对段落的文本格式，这些格式在使用时需要用空行与上下段落分割，否则编辑器检测不到段落就会直接把这个效果一路延伸下去啦。 标题Markdown中的标题一般有两种，一种是类Setext格式的标题，另一种是类atx格式，其中我个人比较常用的是后者。那么下面就来具体讲一下这两者。 类Setext格式是由在文本下一行输入不少于2个的-或=所构成的，其中=表示最高级标题，而-表示二级标题。虽然这两个符号的数量可以少于两个，但是小于等于两个的话可能会造成无法触发下文的语法高亮，所以我个人一般建议使用4个进行描写。 输入： 12一级标题 ===== 显示为:​ 一级标题 输入： 12二级标题 ----- 显示为：​ 二级标题 如上www 类atx格式是由在文本前输入相应数量的#所构成的，支持多级，最高可以达到六级，通常来说仅在此行开头输入相应数量的#加上一个空格之后输入文本即可，但是也可以在文本后以对应数量的#进行封闭。我这么说有人可能听不懂我在讲什么东西，所以这里列出来基本的六级标题: 输入格式： 123456# 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 实际显示为：​ 一级标题二级标题三级标题四级标题五级标题六级标题如上。 这里需要注意的是对于标题而言，无论是否检测到他的前后有空行均会将其认为是一个段落而不是简单的换行，不过这里建议为了美观和书写方便考虑还是最好在标题的前后加上空行，这样自己看起来也会清楚一点。 另外这里要说一下，如果你所使用的编辑器是VSCode，那么一级标题下面你可能会看到一条分割线，那个是VSCode编辑器自己渲染出来的，无视就好啦。 引用和代码块在上面的文章中我们可以看到一些引用块和代码块，顾名思义，它们的作用一般就是用以引用(或者表示重要)一段文字或者代码。这两种格式本身是比较简单的，我在下面演示了之后就可以看出来。当然它们本身是可以嵌套的，就和我下面要讲的列表一样，所以在书写时可能稍微有一些让人迷惑的地方，不过这个我们待会再讲，先来讲一下这两者基本的用法吧。 引用是在该段落的前面加上一个&gt;所构成的，和标题以及其他段落格式语法一样，需要在&gt;后加上一个空格，如输入： ​ &gt; 引用 那么就会输出如下引用块： 引用 在引用块内部的换行和分段遵循Markdown语法，也就是说如果需要进行硬换行则需要在上一行的末尾输入两个tab再进行回车，否则就不会进行换行，如下所示： 12345&gt; 第一行&gt; 上一行末尾没有输入tab &gt; 上一行末尾输入了两个tab&gt;&gt; 上面是一个空行 那么渲染出来的就是这样的： 第一行上一行末尾没有输入tab上一行末尾输入了两个tab 上面是一个空行 懂了吧？不懂的叉出去 同时记住，作为一种段落格式，引用的前后还是需要输入空行来进行分割哦~ 代码块和引用一样，只不过是将&gt;换成了`，代码块的使用范例如下： 对于文本之中的代码，可以用 ` 进行分割，如： 测试` System.out.print(“hi”) ` 则会输出为： 测试System.out.print(&quot;hi&quot;) 对于一整段的代码，可以在段落前后分别用三个 ` 来进行标记，如下： ``` 第一行 还是第一行 第二行 第二段 ``` 那么渲染出来的效果就是这样的： 1234第一行 还是第一行 第二行 第二段 可以看到代码块的分段也是遵循我之前讲到的规则的。 我之前讲到过，上面的两个东西是可以嵌套的，也就是说可以引用里面再引用、代码里面套代码、代码里面套引用、引用里面套代码…等等。这个还是比较好理解的，比如下面这一段话： &gt; 测试 &gt; ``` &gt; System.out.print(“gdzjh”); &gt; ``` &gt;&gt; 以上代码是我瞎写的 &gt; &gt; see you 那么渲染出来就是这样的： 测试 1System.out.print(&quot;gdzjh&quot;); 以上代码是我瞎写的 see you 这个嵌套还是比较好理解的，我就不再多举例子了，相信大家都看得懂。 列表 之前讲到，列表也是一种可以嵌套的格式，而且与引用和代码块不同，列表大部分情况下就是为了嵌套而使用的，所以在使用列表时，清楚自己在本行句首缩进了多少个空格是很有必要的，否则很容易搞混哦~ 列表通常是在段首使用一个*或+或-来表示，这三种符号本质没有任何区别，使用情况完全相同。当然使用这三种符号所表达的列表都是无序列表。如果要表现有序列表的话有另外的表达方式，但其嵌套方式与无序列表是van全一致的，所以这里就先讲一下无序列表。 无序列表的普通表达方式如下所示： - one- two- three 则渲染出的结果为： one two three 换行和嵌套 对于列表而言，换行是不需要行尾加上两个tab键的，在按下回车时，会默认进行换行同时进入下一个列表内容。但是，如果我想进行一个硬换行的同时不进入下一个列表内容应该怎么做呢？那就还是需要tab了。在上一行结束之后，输入两个tab，按下回车，会进行换行并切入下一个列表内容编辑，这时删除这一行的所有内容(其实只有前面那一个标识符)。删除这个标识符需要将本行前面的所有缩进一并删除才行，不过当我们这么做的时候，你会发现页面不怎么好看： &nbsp;&nbsp;&nbsp;&nbsp;- onenew 看不出来是吗？没事，我们先讲一下列表的嵌套再回头来试一下你就会受不了了的，相信我。 列表的嵌套虽然略微复杂但是也不算很难，在这一行的内容输入结束之后，敲下回车，默认进入下一行列表，这时将光标移动到这一行的标识符前，按一下tab进行缩进，则列表将切换成低一级的列表，如下： - one&nbsp;&nbsp;&nbsp;&nbsp;+ new&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* ah that`s good 渲染结果如下： one new ah that`s good 对于每一个等级的列表而言，都相当于一个段落。不过在列表之中这里并不需要需要使用空行隔开，而是通过判断首行的缩进来判断列表级别： &nbsp;- one&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+ new&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* deep&nbsp;- two&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+ new&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* dark&nbsp;- three&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+ new&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* fantasy 那么渲染出来就是这样的： one new deep two new dark three new fantasy 一般来说列表的三个等级分别是实心圆、空心圆和实心方块，不过这里我的文章中本身就包含了一级列表所以说上面的列表中就只有下两级的了 为了编辑时的方便起见，我建议不同等级的列表使用不同的标识符，这样做只是为了看的清楚，没有其他的意义。 好了，到了这里我们再来回头看一下刚才的那个硬换行，在包含了多级列表的时候，会变成什么样呢？ one newyoooo two newah 看上去很好嘛，不过我们看一下源码—– &nbsp;- one&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+ new&nbsp;yoooo&nbsp;- two&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+ new&nbsp;ah 这乱七八糟的缩进是什么玩意啊！ 所以呢，这里给出一个对于列表中的硬换行与级别切换的比较不容易使人迷糊的方式：缩进，每一个级别的列表都与上一级差一个tab键的缩进。 在不同等级之间的切换比较简单，只需要在本行的标识符前面按一下tab即可进入低一级的列表。而要回到上一级的列表，一般来说只需要按backspace即可默认删除tab键所造成的缩进，不过有时可能并没有办法能一次性删除按一次tab键所带来的缩进，所以我们这里也可以采用一种比较暴力的方法，直接将标识符前的缩进删除到本行标识符与上一级的标识符对其就可以了。如下图： 而对于列表内的硬换行，则需要删除行前的标识符，此时本行的缩进会被全部删除，如下图： 此时继续使用tab将光标缩进到文本所需要的级别的位置，如下图： 截图没有截到光标，我就在光标的位置输入了一个l来代替光标 此时输入即可达到文本内的硬换行： 123- one + new 继续new 输出如下: one new继续new 总之，列表的内涵就是缩进，我这样讲可能不太好理解，大家自己去试一试就很好理解了~ 有序列表 刚才说过,列表除了无序列表以外还包括了有序列表。有序列表的嵌套和换行等等都是和无序列表一样的，我这里仅举例一下有序列表的表达方式： 121. new2. new 渲染结果如下： new new 嗯，就这么简单，数字后面加上一个点就好了。 分隔符和标识符分隔符Markdown语法中的分隔符是由不少于三个的*、-或_组成的，这三种符号任意一种均可，你甚至可以在其中插入空格： 123------ ______****** 斜体和加粗Markdown语法中的斜体与加粗是可以嵌套的，这两者的表达均是使用不同数量的*或_来表示，具体规则如下： 加粗： 12**加粗** __加粗__ 加粗加粗​斜体： 12*斜体* _斜体_ 斜体斜体​加粗和斜体： 12***加粗和斜体***___加粗和斜体___ 加粗和斜体加粗和斜体 以上，结束。 删除线Markdown语法中的删除线比较简单，仅需要在文本两侧各加上两个~即可： 1~~del~~ del 链接和图片Markdown中的链接和图片的引用语法有一些相似之处，因此这里我将它们一并说明。 链接连接的语法支持两种格式，行内式和参考式,无论是哪一种,链接文字均需要以方括号包含在内。官方中文文档在这一部分的描述非常复杂，我这里只讲一下我们日常书写中常见的格式。先讲一下行内式，一般我自己写东西的时候用得最多的就是这种，格式如下： [链接文字](链接内容)举例： 1[一个智障的博客](aye10032.github.io) 一个智障的博客 参考式也差不多，不过参考式的格式是分成两部分的，首先是由方括号包含起来的一个链接文字，之后是一个同样有方括号包含起来的标记,接着，在文件的任意处，你可以把这个标记的链接内容定义出来，如下： 1234[一个智障的博客][1] 实际上作者并不是智障。 不过我们这里就姑且认为她是智障。 [1]:aye10032.github.io 一个智障的博客 实际上作者并不是智障。不过我们这里就姑且认为她是智障。​ 嘛，就是这样。具体选择哪一种就看大家各自的书写习惯和文本的具体情况而定了。 图片图片的格式和链接大体一样，从外观上来看仅仅是在前面加上了一个!而已，同样图片的格式也是分为行内式和参考式，具体的表现方式如下： 1![02](\\images\\posts\\markdown\\016.PNG) 那么就会输出一张图片…… 对不起，不要打死我 当然，我这里的图片地址使用的是本地化地址，你也可以选择使用链接，至于怎么生成图片的链接嘛…..最简单的方法：打开QQ相册，上传，然后显示图片链接，完事。当然一般来说我还是推荐使用上面这种方法了，毕竟文件就在本地比较稳定，也不怕丢失了啥的。参考式也是同样: 123![02][01]莓良心 [01]:\\images\\posts\\markdown\\016.PNG 莓良心 特殊符号的输入之前我们的教程里面提到了许多的特殊符号，这些特殊符号一般来说会被编译器自动转换为其表达的格式。不过当我们想要输出这些字符本身的时候应该怎样才能保证它们不被编译呢？答案就是使用反斜杠\\，在想要输出的特殊字符前面加上反斜杠，就可以原样输出该字符本身了。 1\\`int x=1;\\` `int x=1` 这里就不会被编译成代码块了 同理，想要输出\\本身，也是只要在前面加上反斜杠就好了。","link":"/2018/01/20/2018-01-20-markdown/"},{"title":"Linux常用指令","text":"概论Linux的发行版本可以大体分为两类，一类是商业公司维护的发行版本，一类是社区组织维护的发行版本 前者以著名的Redhat（RHEL）为代表，后者以Debian为代表。 Redhat，应该称为Redhat系列，包括RHEL(Redhat Enterprise Linux，也就是所谓的Redhat Advance Server，收费版本)、Fedora Core(由原来的Redhat桌面版本发展而来，免费版本)、CentOS(RHEL的社区克隆版本，免费)。Redhat应该说是在国内使用人群最多的Linux版本，甚至有人将Redhat等同于Linux，而有些老鸟更是只用这一个版本的Linux。所以这个版本的特点就是使用人群数量大，资料非常多，言下之意就是如果你有什么不明白的地方，很容易找到人来问，而且网上的一般Linux教程都是以Redhat为例来讲解的。Redhat系列的包管理方式采用的是基于RPM包的YUM包管理方式，包分发方式是编译好的二进制文件。稳定性方面RHEL和CentOS的稳定性非常好，适合于服务器使用，但是Fedora Core的稳定性较差，最好只用于桌面应用。 Debian，或者称Debian系列，包括Debian和Ubuntu等。Debian是社区类Linux的典范，是迄今为止最遵循GNU规范的Linux系统。Debian最早由Ian Murdock于1993年创建，分为三个版本分支（branch）： stable, testing 和 unstable。其中，unstable为最新的测试版本，其中包括最新的软件包，但是也有相对较多的bug，适合桌面用户。testing的版本都经 过unstable中的测试，相对较为稳定，也支持了不少新技术（比如SMP等）。而stable一般只用于服务器，上面的软件包大部分都比较过时，但是 稳定和安全性都非常的高。Debian最具特色的是apt-get / dpkg包管理方式，其实Redhat的YUM也是在模仿Debian的APT方式，但在二进制文件发行方式中，APT应该是最好的了。Debian的资料也很丰富，有很多支持的社区，有问题求教也有地方可去:) Arch Linux ，不同于以上两种，属于一种比较“硬核”的Linux系统，是一款基于x86-64架构的 Linux发行版。支持社区参与。系统设计以KISS原则（保持简单和愚蠢）为总体指导原则，注重代码正确、优雅和极简主义，期待用户能够愿意去理解系统的操作。 Arch Linux 系统安装、删除和更新软件的软件包管理器叫做 pacman 。 以上文字摘抄自网络，知道就行了。 Linux目录文件结构 /：根目录，一般根目录下只存放目录，不要存放文件，/etc、/bin、/dev、/lib、/sbin应该和根目录放置在一个分区中 /bin:/usr/bin:可执行二进制文件的目录，如常用的命令ls、tar、mv、cat等。 /boot：放置linux系统启动时用到的一些文件。/boot/vmlinuz为linux的内核文件，以及/boot/gurb。建议单独分区，分区大小100M即可 /dev：存放linux系统下的设备文件，访问该目录下某个文件，相当于访问某个设备，常用的是挂载光驱mount /dev/cdrom /mnt。 /etc：系统配置文件存放的目录，不建议在此目录下存放可执行文件，重要的配置文件有/etc/inittab、/etc/fstab、/etc/init.d、/etc/X11、/etc/sysconfig、/etc/xinetd.d修改配置文件之前记得备份。注：/etc/X11存放与x windows有关的设置。 /home：系统默认的用户家目录，新增用户账号时，用户的家目录都存放在此目录下，表示当前用户的家目录，test表示用户test的家目录。建议单独分区，并设置较大的磁盘空间，方便用户存放数据 /lib:/usr/lib:/usr/local/lib：系统使用的函数库的目录，程序在执行过程中，需要调用一些额外的参数时需要函数库的协助，比较重要的目录为/lib/modules。 /lost+fount：系统异常产生错误时，会将一些遗失的片段放置于此目录下，通常这个目录会自动出现在装置目录下。如加载硬盘于/disk 中，此目录下就会自动产生目录/disk/lost+found /mnt:/media：光盘默认挂载点，通常光盘挂载于/mnt/cdrom下，也不一定，可以选择任意位置进行挂载。 /opt：给主机额外安装软件所摆放的目录。如：FC4使用的Fedora 社群开发软件，如果想要自行安装新的KDE 桌面软件，可以将该软件安装在该目录下。以前的 Linux 系统中，习惯放置在 /usr/local 目录下 /proc：此目录的数据都在内存中，如系统核心，外部设备，网络状态，由于数据都存放于内存中，所以不占用磁盘空间，比较重要的目录有/proc/cpuinfo、/proc/interrupts、/proc/dma、/proc/ioports、/proc/net/*等 /root：系统管理员root的家目录，系统第一个启动的分区为/，所以最好将/root和/放置在一个分区下。 /sbin:/usr/sbin:/usr/local/sbin：放置系统管理员使用的可执行命令，如fdisk、shutdown、mount等。与/bin不同的是，这几个目录是给系统管理员root使用的命令，一般用户只能”查看”而不能设置和使用。 /tmp：一般用户或正在执行的程序临时存放文件的目录,任何人都可以访问,重要数据不可放置在此目录下 /srv：服务启动之后需要访问的数据目录，如www服务需要访问的网页数据存放在/srv/www内 /usr：应用程序存放目录，/usr/bin存放应用程序，/usr/share存放共享数据，/usr/lib存放不能直接运行的，却是许多程序运行所必需的一些函数库文件。/usr/local:存放软件升级包。/usr/share/doc:系统说明文件存放目录。/usr/share/man: 程序说明文件存放目录，使用 man ls时会查询/usr/share/man/man1/ls.1.gz的内容建议单独分区，设置较大的磁盘空间 /var：放置系统执行过程中经常变化的文件，如随时更改的日志文件/var/log，/var/log/message：所有的登录文件存放目录，/var/spool/mail：邮件存放的目录，/var/run:程序或服务启动后，其PID存放在该目录下。建议单独分区，设置较大的磁盘空间 以上仍然摘自网络，大体了解各个目录的意义即可。 指令文件/文件夹相关 ls: 列出目录 cd：切换目录 pwd：显示目前的目录 mkdir：创建一个新的目录 rmdir：删除一个空的目录 cp: 复制文件或目录 mv：移动文件或目录 rm: 移除文件或目录 ls(列出目录)语法 1ls[参数](文件) 选项 -a：显示所有档案及目录（ls默认将档案名或目录名称为“.”的视为隐藏，不会列出）；-C：多列显示输出结果。这是默认选项；-c：与“-lt”选项连用时，按照文件状态时间排序输出目录内容，排序的依据是文件的索引节点中的ctime字段。与“-l”选项连用时，则排序的一句是文件的状态改变时间；-l：以长格式显示目录下的内容列表。输出的信息从左到右依次包括文件名，文件类型、权限模式、硬连接数、所有者、组、文件大小和文件的最后修改时间等；–full-time：列出完整的日期与时间；–color={never,auto,always}：是否使用不同的颜色高亮显示不同类型 参数 目录：指定要显示列表的目录，也可以是具体的文件。 实例 显示根目录下的所有文件(含属性与隐藏档)： 1[root@aye10032 ~]# ls -al cd (切换目录) 语法 1cd (相对路径或绝对路径) 两种路径 比如我们现在有这么一个test文件夹，它的路径是 1/root/nhjckx/aye10032/test 那么这个/root/nhjckx/aye10032/test就是该目录的绝对路径 但是如果此时我已经在/root/nhjckx/aye10032目录下了，那么也可以用cd ./test来进入test目录。 现在再假设我们在/root/nhjckx/aye10032目录下还有一个文件夹test01，那么同理，他的绝对路径就是 1/root/nhjckx/aye10032/test01 此时如果我们在/root/nhjckx/aye10032目录下，同样可以用cd ./test01命令来进入test01这个目录。但是，如果我们此时所处的目录是/root/nhjckx/aye10032/test呢？此时我们有两种选择，一种是使用绝对路径，另外一种是使用相对路径： 1cd ../test01 同样也可以跳转到test01目录。 总结： 1.绝对路径必定由“/”开头2.绝对路径是为档案/文件的所在位置做指向3.在任何时候，都可以用绝对路径来找到我们想要的文件 1.相对路径不由“/”开头2.相对路径是相对于现在目前所在的位置，为目的地指向3.相对路径只对当前所在目录有效,./代表当前路径，../代表上一层目录 其他常用用法 cd 进入用户主目录；cd ~ 进入用户主目录；cd - 返回进入此目录之前所在的目录；cd .. 返回上级目录cd ../.. 返回上两级目录 pwd (显示目前所在的目录)这个指令没有什么好说的，就是显示当前目录的作用： 12[root@aye10032 test]# pwd/root/test mkdir (创建新目录)语法 1mkdir [参数](目录名称) 参数 -m 建立目录的同时设置目录的权限；-p 若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录； 关于权限的问题，我会放在后面再讲。 当创建多个目录时，目录名之间使用空格隔开。 实例在目录/home下建立目录nhjckx和其下的子目录test，并且只有文件主有读、写和执行权限，其他人无权访问 1[root@aye10032 ~]# mkdir -m-p 700 /home/nhjckx/test rmdir (删除空的目录)语法 1rmdir [参数] (目录名称) 参数 -p： 删除指定目录后，若该目录的上层目录已变成空目录，则将其一并删除；-v： 显示命令的详细执行过程； 当删除多个空目录时，目录名之间使用空格隔开。 实例删除子目录test和其父目录nhjckx 12[root@aye10032 ~]# cd /home [root@aye10032 home]# rmdir -p nhjckx/test cp (复制文件或目录)语法 12cp [参数] (source) (destination) cp [参数] source1 source2 source3 .... directory 参数 -d：当复制符号连接时，把目标文件或目录也建立为符号连接，并指向与源文件或目录连接的原始文件或目录；-f：强行复制文件或目录，不论目标文件或目录是否已存在；-i：覆盖既有文件之前先询问用户；-l：对源文件建立硬连接，而非复制文件；-p：保留源文件或目录的属性；-R/r：递归处理，将指定目录下的所有文件与子目录一并处理；-s：对源文件建立符号连接，而非复制文件；-u：使用这项参数后只会在源文件的更改时间较目标文件更新时或是名称相互对应的目标文件并不存在时，才复制文件；-S：在备份文件时，用指定的后缀“SUFFIX”代替文件的默认后缀；-b：覆盖已存在的文件目标前将目标文件备份；-v：详细显示命令执行的操作。 实例将/home/test下名为test的文本文档复制到/home/nhjckx目录下并重命名为test01： 1[root@aye10032 ~]# cp /home/test/test.txt /home/hnjckx/test01.txt 注意，cp指令并不能新建文件夹，所以复制到的目标文件夹必须存在。同时，如果进行操作的文件或文件夹没有权限，则也会报错 mv (移动文件与目录，或修改名称)语法 12mv [参数] (source) (destination)mv [参数] source1 source2 source3 .... directory 参数 -f ：如果目标文件已经存在，不会询问而直接覆盖；-i ：若目标文件 (destination) 已经存在时，会询问是否覆盖;-u ：若目标文件已经存在，且 source 比较新，才会升级 (update); 实例将/home/test目录下的所有文件(用*表示)移动到当前目录下(用.表示)： 1[root@aye10032 ~]# cp /home/test/* . rm (移除文件或目录)语法 1rm [参数](文件或目录) 参数 -f ：删除时忽略不存在的文件，不会出现警告信息；-i ：互动模式，在删除前会询问使用者是否动作；-r ：递归删除； 实例 删除/home/test下名为test的文本文档： 12[root@aye10032 ~]# rm -i /home/test/test.txtrm: remove regular file `test.txt'? y 删除整个test目录： 1[root@aye10032 ~]# rm -rf /home/test 数据无价，删除请谨慎！ 文件属性相关 文件属性Linux系统是一种典型的多用户系统。不同的用户处于不同的地位，拥有不同的权限，Linux系统对不同的用户访问同一文件（包括目录文件）的权限做了不同的规定。 在Linux中我们可以使用ls –l命令来显示一个文件的属性以及文件所属的用户和组，如： 123456789101112[root@aye10032 aye10032]# ls -l total 29544-rw-r--r--. 1 root root 2 Feb 26 19:23 banned-ips.json -rw-r--r--. 1 root root 2 Feb 26 19:23 banned-players.json -rw-r--r--. 1 root root 180 Feb 23 08:47 eula.txt drwxr-xr-x. 2 root root 213 Feb 26 19:23 logs -rw-r--r--. 1 root root 30222121 Feb 23 08:42 minecraft_server.1.12.2.jar -rw-r--r--. 1 root root 2 Feb 26 19:23 ops.json -rw-r--r--. 1 root root 753 Feb 26 19:23 server.properties -rw-r--r--. 1 root root 2 Feb 26 19:23 usercache.json -rw-r--r--. 1 root root 2 Feb 23 08:47 whitelist.json drwxr-xr-x. 7 root root 133 Feb 26 19:24 world 我们就以以上我自己的一个文件夹为例来谈一谈，输出的信息从左到右依次包括文件属性、文件硬连接数、所有者、组、文件大小、文件的最后修改时间和文件名，其他的都比较好理解，这里就特别讲一下表示文件属性的三个三元组。这里一共有十个字符，分为四组，其中第一个字符代表这个文件是目录、文件或链接文件等等。 当为[ d ]则是目录 当为[ - ]则是文件； 若是[ l ]则表示为链接文档(link file)； 若是[ b ]则表示为装置文件里面的可供储存的接口设备(可随机存取装置)； 若是[ c ]则表示为装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置)。 接下来的字符中，以三个为一组，且均为[ rwx ] 的三个参数的组合。其中，[ r ]代表可读(read)、[ w ]代表可写(write)、[ x ]代表可执行(execute)。这三个三元字符组中第一个三元字符组代表文件所有者的权限，第二个代表文件的组的权限，第三个代表所有其他用户的权限。每个字符组都是按照[rwx]的顺序排列，如果该权限组有此权限，则输出相应的字母，如果没有，则输出”-“。比如如下信息： 1drwxr-xr-x. 7 root root 133 Feb 26 19:24 world 表现的意思就是有一个名为”world”的目录(第一位是d，表示目录)，它对于所有者、也就是建立这个文件夹的用户，拥有读写以及可执行权限(rwx三个字母都有)；对于和所有者处于同一组的用户，拥有可读和执行权限，但是没有写入权限；对于其他用户，也是拥有除了写入权限的其他两个权限。在看懂这些之后，我们就可以继续接下来的学习了。 chgrp(更改文件属组)语法 1chgrp [参数] (属组名)(文件名) 参数 -R：递归更改文件属组 实例将/home/test及其子目录下的所有文件的用户组改为mrquin： 1[root@aye10032 ~]# chgrp -R mrquin /home/test chown(更改文件属主或同时更改文件属组)语法 12chown [参数] (属主名)(文件名)chown [参数] (属主名:属组名)(文件名) 参数 -R：递归更改文件属主 实例将/home/test及其子目录下的所有文件的拥有者改为ywwuyi： 1[root@aye10032 ~]# chown -R ywwuyi /home/test 再将其所有者和用户组改回为mrquin： 1[root@aye10032 ~]# chown -R mrquin:mrquin /home/test chmod(更改文件9个属性)语法 1chmod [参数] (属性) (文件或目录) 属性： Linux文件属性有两种设置方法，一种是数字，一种是符号。Linux文件的基本权限就有九个，分别是[owner/group/others]三种身份,各有自己的[read/write/execute]权限。文件的权限字符为：『-rwxrwxrwx』,其中，我们可以使用数字来代表各个权限，各权限的分数对照表如下： r : 4 w : 2 x : 1 每种身份(owner/group/others)各自的三个权限(r/w/x)分数是需要累加的，例如当权限为： [-rwxrwx—] 分数就是： owner = rwx = 4+2+1 = 7 group = rwx = 4+2+1 = 7 others= — = 0+0+0 = 0这样我们就可以得出文件权限的数字表示了 除了使用数字表达之外，我们也可以使用字符来对用户文件进行操作。我们前面已经将讲过，在代表文件的9个字母中分别代表：用户(user)；组(group)和其他用户(others) 的权限，则我们就可以用u，g，o这三个字母来表示三种身份的权限。具体使用时的语法为chmod (u=rwx,g=rx,o=r) [文件名]类似的语法。 实例将/home/test/test.txt文件权限设置为rwxrwxrwx(两种写法)： 12[root@aye10032 ~]chmod 777 /home/test/test.txt[root@aye10032 ~]chmod u=rwx,g=rwx,o=rwx /home/test/test.txt 将上面文件的可执行权限(x)撤销： 1[root@aye10032 ~]chmod a-x /home/test/test.txt 用户和用户组相关上文我们讲到了文件的属性当中多次提到了用户和组这两个概念。对于大部分平常惯用Windows系统的同学们而言，这个概念可能会一时摸不着头脑。这里就先简单提一下Linux系统 TIPS: Linux系统是一个多用户多任务的分时操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统。 用户的账号一方面可以帮助系统管理员对使用系统的用户进行跟踪，并控制他们对系统资源的访问；另一方面也可以帮助用户组织文件，并为用户提供安全性保护。 每个用户账号都拥有一个惟一的用户名和各自的口令。 用户在登录时键入正确的用户名和口令后，就能够进入系统和自己的主目录。 useradd(添加用户)语法： useradd [参数] (用户名称) 参数 -c 指定一段注释性描述 -d 指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录 -g 指定用户所属的用户组 实例： 新建用户mrquin，该用户属于用户组mole，同时生成同名的用户主文件夹。 1[root@aye10032 ~]useradd -g mole –d /usr/mrquin -m mrquin userdel(删除用户)语法： userdel [参数] (用户名称) 参数： -r 将用户和他的主目录一起删除 实例： 将用户mrquin连同主目录一起删除： 1[root@aye10032 ~]userdel -r mrquin usermod(修改用户属性)语法： usermod [参数] (用户名称) 参数： 此处的参数与useradd指令的参数完全一致，不再描述。 实例： 将用户mrquin的所属用户组改为rua： 1[root@aye10032 ~]usermod -g rua mrquin groupadd(新建用户组)语法： 1groupadd [参数] (用户组名称) 参数： -g GID 指定新用户组的组识别号 -o 新用户组的GID可以与已有用户组相同（一般与-g同时使用） 实例： 1[root@aye10032 ~]groupadd -g-o 144 mrquin 常用软件 对于Linux系统来说，有一些常用软件我这里也推荐一下： 文本编辑器VIMvim是一款轻量化但是功能强大的文本编辑器，这里只讲一些基础的操作。一般来说，当你装了一个新的Linux系统，他可能没有安装nano，甚至可能没有安装vim，但是肯定可以使用vi指令。","link":"/2018/02/27/2018-02-27-linux/"},{"title":"工业物联网复习","text":"《工业物联网考试内容与复习指导》一、简答题第一章1、通常国内对物联网的定义是什么？物联网主要解决哪三个层次的互联？（6 分） 国内通常认为物联网是通过无线射频识别装置、红外感应器、全球定位系统和激光扫描器等信息传感设备，按约定的协议，把任何物品与互联网相连接，进行信息交换和通信，以实现智能化识别、定位、跟踪、监控和管理的一种网络。 物联网主要解决物品到物品（Thing to Thing，T2T）、人到物品（Human to Thing，H2T）以及人到人（Human to Human，H2H）之间的互连。 2、物联网的基本特征，物联网应用的特点。（6 分） 物联网的基本特征就是网络化、物联化、互联化、自动化、感知化以及智能化等。 特点： （1）经济发展跨越化。 （2）感知识别普适化。 （3）异构设备互联化。 （4）联网终端规模化。 （5）管理调控智能化。 （6）应用服务链条化。 3、物联网应用服务类型有： （5 分） ① 联网类服务 ② 信息类服务 ③ 操作类服务 ④ 安全类服务 ⑤ 管理类服务 4、物联网应用 4 大关键领域和 3 大物联网应用模式（5 分） RFID领域、传感网（Wireless Sensor Networks，WSN）领域、M2M（Machine to Machine）领域和两化（工业化与信息化）融合领域 基于RFID的物联网应用模式、基于WSN的物联网应用模式、基于M2M的物联网应用模式 第二章1、物联网软件平台的组成部分（4 分） 一般来说，物联网软件平台建立在分层的通信协议体系之上，通常包括数据感知系统软件、中间件系统软件、网络操作系统（包括嵌入式系统）以及物联网管理信息中心（包括企业物联网管理中心、国家物联网管理中心、国际物联网管理中心及其信息中心）的信息管理系统（Management Information System，MIS）等。 2、物联网的参考体系架构的分层及各层的作用。（10 分） 物联网的参考体系架构可分为三层，即感知层、网络层和应用层 感知层。感知层是物联网的皮肤和五官，主要完成信息的收集与简单处理。 网络层。网络层是物联网的神经中枢和大脑，主要完成信息的远距离传输等功能。 应用层。应用层主要完成服务发现和服务呈现的工作，其作用是将物联网的“社会分工”与行业需求相结合，实现广泛的智能化。 3、物联网的三种体系结构及其组成 物联网自主体系结构，由数据面、控制面、知识面和管理面组成。 物联网EPC体系结构，由EPC编码体系、RFID系统及EPC信息网络系统等3个部分组成。 物联网UID技术体系架构，由泛在识别码（uCode）、泛在通信器（Ubiquitous Communicator，UC）、信息系统服务器和uCode解析服务器等4部分构成。 4、物联网体系结构的特点和物联网体系结构的构建原则（6 分） 特点: （1）网络拓扑结构变化快 （2）传感器网络难以形成网络的结点和中心 （3）传感器网络的作用距离一般比较短 （4）传感器网络数据的数量不大 （5）物联网对数据的安全性要求较高 （6）网络终端之间的关联性较低 （7）网络地址的短缺导致网络管理的复杂性 原则： （1）多样性原则 （2）时空性原则 （3）互联性原则 （4）互操作性 （5）扩展性原则 （6）安全性原则 5、物联网结点类型，及各种节点在电源、移动性、感知性、存储能力、计算能 力、联网能力和连接能力等几个方面的比较（6 分） 节点类型 无源CPS 有源CPS 互联网CPS 电源 无 有 不间断 移动性 有 可有 无 感知性 被感知 感知 感知 存储能力 无 有 强 计算能力 无 有 强 联网能力 无 有 强 连接能力 T2T T2T、H2T、H2H H2T、H2H 6、物联网结点的互联类型、连接方式及不同连接方式的特点（10 分） 结点之间可能存在的连接类型包括无源CPS结点与有源CPS结点、有源CPS结点与有源CPS结点以及有源CPS结点与互联网CPS结点之间的连接。 无源CPS结点与有源CPS结点的互连结构，两者通过物理层协议连接。 有源CPS结点与有源CPS结点的互连结构。有源CPS结点之间通过物理层、数据链路层和应用层的协议交互，可实现有源CPS结点之间的信息采集、传递和查询。 有源CPS结点与互联网CPS结点的互连结构，有源CPS结点需要通过CPS网关，才能与互联网结点连接。 第三章1、红外感应技术原理是什么？红外感应技术的主要优点有哪些？（5 分） 红外感应技术是指利用目标与背景之间的红外辐射差异所形成的热点或图像来获取目标和背景信息。 红外感应技术的主要优点在于符合隐身自身高度隐蔽性的要求，即被动探测、不辐射电磁波，且因工作波长较微波雷达短3～4个数量级，因此可以形成具有高度细节的目标图像，而且目标分辨率也较高。 2、GPS 的组成部分，基本观测方式及观测方式的优缺点。（8 分） GPS主要有三大部分组成，即空间星座部分、地面监控部分和用户接收部分。 伪距定位，优点是数据处理简单，对定位条件的要求低，不存在整周模糊度问题，可以非常容易地实现实时定位；缺点是观测值精度低； 载波相位定位，优点是观测值的精度高，一般优于2 mm；缺点是数据处理过程复杂，存在整周模糊度问题。 3、RFID 的工作频带，RFID 的选取需要考虑的问题。（6 分） 无源低频（125～134 kHz） 无源高频（13.56 MHz） 无源超高频（860～960 MHz） 有源RFID技术（2.45 GHz，5.8 GHz） 选择RFID标签时，除了要考虑频率与距离的关系，同时还要考虑如下几点： 频点 读/写技术 识读距离 标签外形 环境条件 采用标准 4、EPC 编码规则，EPC 编码结构及编码各部分的意义（8 分） 唯一性 永久性 简单性 可扩展性 保密性与安全性 无含义 EPC标签编码由一个分层次、可变长度的标头以及一系列数字字段组成。标头之后的3段数据依次为EPC管理者、对象分类和序列号。 EPC的标头字段（EPC Header）。标头字段标识EPC的总长、识别类型和EPC编码结构。 EPC管理者（EPC Manager）。EPC管理者是描述与此EPC相关的生产厂商的信息。 对象分类（Object Class）。对象分类记录产品精确类型的信息，标识厂家的产品种类。 序列号（Serial Number）。序列号唯一标识货品。 5、WSN 中的数据融合技术可以分为？WSN 的特点。（6 分） 目前，WSN中的数据融合技术主要采用集中式数据融合算法和分布式数据融合算法实现。 硬件资源有限 电源容量有限 无中心 自组织 多跳路由 动态拓扑 结点数量众多、分布密集 传感器结点出现故障的可能性较大 6、5G 通信的关键技术 高频段传输 新型多天线传输 同时同频全双工 D2D 密集网络 新型网络架构 7、什么是超宽带？UWB 与其他的“窄带”或者“宽带”相比的区别。（ 4 分） 超宽带（Ultra-wideband，UWB）是指信号带宽大于500 MHz或者信号带宽与中心频率之比大于25%。 主要有两方面的区别：一是超宽的带宽，二是超宽带典型的用于无载波应用方式。 8、ZigBee 的频带分布，不同频带的带宽，ZigBee 的特点（10 分） 868 MHz频带，传输速率为20 kbps，适用于欧洲； 915 MHz频带，传输速率为40 kbps，适用于美国； 2.4 GHz频带，传输速率为250 kbps，全球通用。 特点： 低功耗 低成本 低速率 近距离 短时延 网络容量大 高可靠 高安全 免执照频段 9、IPv6 的结构及主要优势 IPv6严格按照地址的位数划分地址，而不用子网掩码区分网络号和主机号。在128位的地址中，前64位为地址前缀，表示该地址所属的子网络并用于路由；后64位为接口地址，用于子网络中标识结点。 更大的地址空间 更好的头部格式 更小的路由表 安全性高 服务类型种类多 协议可扩展 10、中间件的分类（6 分） 数据访问中间件 远程过程调用中间件 面向消息中间件 面向对象中间件 事务处理中间件 网络中间件 终端仿真/屏幕转换中间件 11、云平台的业务模式、云计算的运营模式、云计算的核心技术（8 分） 云平台的业务模式通常有基础设施即服务（Infrastructure as a Service，IaaS）、平台即服务（Platform as a Service，PaaS）和软件即服务（Software as a Service，SaaS）3种形式。 云计算按运营模式可以分为公共云、私有云和混合云3种。 云计算系统运用了许多技术，其中以编程模型、数据存储、数据管理、虚拟化和云计算平台管理等技术最为关键。 第五章1、RFID-MTS（基于 RFID 的生产追溯管理系统）的主要内容： （5 分） RFID-MTS的主要内容涉及如下几个方面： 生产计划与排产 生产过程控制 数据采集 质量管理 产品物料追溯与招回管理 资源管理 流程过程控制 统计分析 其他系统接口 系统管理 角色分配管理 第七章1、交通信号实时采集系统中车辆信息采集的两种方式（5 分） 固定式信息采集 浮动车式信息采集 2、交通大数据平台特点（3 分） 海量数据，综合研判 精确检测，疏导交通 及时纠正车辆违法 3、公交车辆智能调度系统的组成及实现的功能 公交车辆智能调度系统由车载子系统、网控中心子系统、站调中心子系统等3个主要子系统构成 实现的功能： 公交运营车辆定位 公交运营车辆实时监控 实时通信 自动调整发车间隔和行车顺序 乘客信息采集 公共交通中心多种移动交通方式的协调 车站乘客服务信息 第九章1、智能家居系统的应用领域，智能家居系统结构组成及各组成部分的作用。（8 分） 智能家居系统通常主要涵盖智能灯光、家庭安全、家电控制、室内环境控制、背景音乐、家庭影院、云健康体系、智能厨房以及智能园艺等9大应用领域 智能家居系统结构主要包括感知层、网络层、应用层等三大层次 感知层，感知层主要作用是“感知”环境参数及电器设备的工作参数； 网络层，网络层是物联网网关，主要负责将感知层的感知设备信息接入互联网中。它一方面接收感知设备发送的信息，并通过网络接口接入互联网，实现远程通信服务。 应用层，应用层主要包括各种终端设备，通过浏览器或者手机APP软件为用户提供一个可以与智能家居系统远程交互的人机接口。应用层还可以利用大数据、云计算等技术把大量的数据处理放在家庭外部，构成智能家居的核心。 二、分析说明题第二章1、物联网的硬件平台的组成及各部分的作用。（8 分） 感知结点， 末梢网络，感知结点与末梢网络承担物联网的信息采集和控制任务，构成传感网并实现传感网的功能。 核心承载网，主要承担接入网与信息服务系统之间的数据通信任务。 信息服务系统硬件设施，主要用于对采集数据的融合/会聚、转换、分析，以及对用户呈现的适配和事件的触发等。 2、物联网体系结构层次分析。（10 分）能够画出物联网体系结构层次图， 了解各部分的功能。 感知层，完成物联网应用的数据采集和设备控制 感知控制层，主要任务是实现全面感知与自动控制，即通过实现对物理世界各种参数的采集与处理，以其需要进行行为自动控制。 数据融合层，任务是将不同感知结点、不同模式、不同媒质、不同时间、不同表示的数据进行相关和综合，以获得对被感知对象的更精确描述。 网络层，主要功能是利用各种通信网络，实现感知数据和控制信息的双向传递。 接入层，完成应用末梢各结点信息的组网控制和信息汇集，或完成向末梢结点下发信息的转发等功能。 汇聚层， 汇集接入层的用户流量，进行数据分组传输的汇聚、转发与交换； 根据接入层的用户流量进行本地路由、包过滤和排序、流量均衡与整形、地址转换，以及安全控制等； 根据处理结果把用户流量转发到核心交换层，或者在本地重新路由； 在虚拟局域网（Virtual Local Area Network，VLAN）之间进行路由以及其他工作组所支持的功能； 定义组播域和广播域等 核心交换层，核心交换层主要为物联网提供高速、安全、具有服务质量保障力的通信环境。 应用层，物联网应用层利用经过分析处理的感知数据，为用户提供不同类型的特定服务。 智能处理层，智能处理层对下层网络层的网络资源进行认知，进而达到自适应传输的目的。对上层的应用接口层提供统一的接口与虚拟化支撑。 应用接口层，应用接口层的主要任务就是将智能处理层提供的数据信息，按照业务应用需求，采用软件工程方法，完成服务发现和服务呈现。 第三章1、请具体给出 3 种不同的遥感分类方法（8 分） 按搭载传感器的遥感平台进行分类（地面遥感、航空遥感、航天遥感） 按遥感探测的工作方式进行分类（主动式遥感、被动式遥感） 按遥感探测的工作波段进行分类（紫外遥感、可见光遥感、红外遥感、多谱段遥感、微波遥感、多光谱遥感） 2、与条形码相比，RFID 用于物品识别时具有的优势。（ 6 分） 与条形码相比，RFID用于物品识别时具有很多优势： 可以识别单个非常具体的物体，而不是像条形码那样只能识别一类物体 采用无线电，可以透过外部材料读取数据，而条形码必须靠激光扫描在可视范围内读取信息； 可以同时对多个物体进行识读，而条形码每次只能读取一个； 储存的信息量非常大。 3、请简要分析和说明一下 ONS 的工作流程（6 分） ONS基础解析网络主要由映射信息、根ONS（Root ONS）服务器、本地ONS（Local ONS）服务器、ONS本地缓存（ONS Cache）和本地ONS解算器（Local ONS Resolver）这5部分组成。 首先，标签解读器从RFID标签上读取出EPC序列，并将这个EPC序列发送到本地中间件服务器。其次，中间件服务器（根据标签数据标准）把这些比特流转换成URI形式，再将此URI发送给本地ONS解算器。 4、EPCIS 中的数据分类，不同数据的处理工具，及 EPCIS 的组成部分 EPCIS中的数据分类 时标数据 静态属性数据 关系数据库适用于处理能用一些有限的域或列表述的表格式的时标数据，而XML工具（则更适合访问和处理一些静态属性数据。 EPCIS组成 Web服务器 SOAP引擎 服务处理程序 数据源适配器 数据存储单元 5、基于 ZigBee 的智能停车管理系统的工作原理。 一般大型停车场可分为入口管理系统、停车泊位和防盗报警系统、出口收费管理系统以及中心管理系统等4个部分。 当车辆进入停车场感应区时，在距离停车场10～15 m的范围时，由协调器发送信号，激活处于休眠状态的ZigBee识别标签（车载路由结点）识别标签自动连接到协调器，并向协调器发送芯片内部存储的车辆相关信息；协调器将读出的信息通过ZigBee无线网络传输到控制台。 确认进入后，控制台根据现有车位安排停车位置，从起始位置开始，经ZigBee识别标签与路由结点及协调器通信，确定行驶路径，途径中间位置最后到达限位位置（停车位置）。 停车结束后，经由同样的方式可以驶出停车场；根据时间计费，然后使ZigBee识别标签休眠，完成整个过程。中心管理系统在线监控停车场进出日期、收费以及停车场内部所有车辆安全状况，处理并记录停车场内部的各种安全事件。 第五章1、煤炭运输物流系统中的车载 GPS/ELS（电子签封）监管系统的工作原理 根据煤炭运输的特点，电子签封分布在篷布与箱体四周，管理者采取电子施/解封的工作环节，在出发点将探头插入即施封，并通过电子钥匙与驾驶室内的主机办理确认，同时信息上传，此为施封过程。车辆运行至指定地点，主机指示灯显示正常，管理者办理确认，将探头拔出，同时将信息上传，此为解封过程，可正常卸车，施/解封之间的所有操作数据均上传。电子钥匙具有数码唯一性，不能仿制代替，确定管理者的合法身份。 2、RFID 图书管理系统包括哪些子系统？条形码图书馆系统与 RFID 图书馆 系统的自助借还书功能比较。（ 8 分） RFID图书管理系统包括标签转换系统、自助借还系统、自助还书系统、智能查找系统、手持盘点或移动盘点系统、安全门检测系统。 原有的基于条形码的图书馆流通系统与RFID图书馆系统的比较如下： 识别条形码图书时，需要靠近光源扫描，而RFID标签的有效范围则可从几厘米到几米，且可以通过选择标签确定适宜的扫描范围，在保证准确性的前提下更方便扫描。 条形码存储信息的容量有限，而RFID的EPC标签存储信息量很大，可存储书本位置、借阅历史和出版信息等多层次的内容。 条形码图书借阅时一次只能读取一本，借阅耗时长；而统计数据表明，借还每本RFID图书将会节约近一半时间。 条形码图书借阅时，每本图书均需进行物理的充/消磁工作；而EPC标签的图书，则无须每次进行这个过程，也无须翻开书本，寻找标签，对准扫描仪。 3、物联网供应链管理系统的组成。基于物联网的自动入库管理系统的工作 原理。（8 分） 物联网供应链管理系统主要由管理平台、生产企业、仓储企业、商场企业和企业中间件5大部分组成。 基于物联网的自动入库管理系统的基本原理，就是以电子标签作为产品识别和信息采集的技术纽带，通过在仓库出入口处设置读写器对产品进行自动识别，同时通过物联网获取产品的详细信息从而自动生成入库清单，以达到自动化入库管理的目的。 产品入库时，由设置在仓库入口的入库读写器读取产品EPC码并通过数据采集接口交由入库管理模块；入库管理模块通过远程数据接口访问PML服务器以获取产品的详细信息，并自动生成产品入库清单；然后通过本地数据接口将入库产品信息更新到本地数据中心。 第七章1、基于 RFID 的交通流量检测技术 应用RFID技术的车流量检测系统，通过在交叉路口交通信号灯上游安装阅读器，阅读器通过发射天线发送一定频率的射频信号，这样当装有RFID标签的车辆进入天线工作区域时就会产生感应电流，发送自身信息。当接收天线接收到标签发送来的信息时，由阅读器读取信号并对其进行处理，得出车辆通行的频率，再将数据传送给智能控制系统。最后，智能控制系统根据反馈的信息，做出调整交通信号灯转换周期的决策。 2、与物联网相比，车联网独有的特点： 车联网当中的网络结点以车辆为主，这就决定了车联网的高动态特性。与一般的物联网相比，车联网当中的汽车结点移动速度更快、拓扑变化更频繁、路径的寿命更短。 与一般的物联网相比，车联网当中的车辆结点间的通信受到的干扰因素更多，包括路边的建筑物、天气状况、道路交通状况、车辆的相对行驶速度等。 车联网中受到车辆运动情况、道路分布状况等因素的影响，网络的连通性不稳定，这在一定程度上限制了车联网的推广使用。 车辆中有稳定的电源供电，网络工作时一般没有能量方面的限制；车辆中有较大的承载空间，可以装备较高性能的车载计算机以及一些必要的外部辅助设备。 车联网对网络的安全性 、可靠性以及稳定性要求更高。车联网的应用过程中，不能够像互联网一样出现一些不安全、不可靠的事件，否则可能会造成巨大的生命财产损失，引起车辆行驶的混乱。 第九章1、共享单车智能电子锁的工作原理（8 分） 用户通过手机APP寻找车辆，云端系统会根据用户当前位置，通过定位模块得到用户附件单车的经纬度，并以地图API（Application Programming Interface，应用程序编程接口）模式在APP上展示给用户。当用户找到车后，扫描单车上的二维码，使得单车信息用户个人信息通过收／发信模块－起被发送到云端系统。 接着，系统会向锁控模块发送开锁指令。车载中央控制单元变出发电机组件转动，从而带动锁舌驱动构件将锁舌从锁销的档槽内移出，锁销在拉簧的作用下变位至开锁状态。当用户到达目的地之后，将单车停放在在路边白线公共停车区域，手动将锁销向闭锁方向拉动时，使得锁舌在弹簧的推力下进人档槽，卡定锁销。最后，中央控制器会通知云端系统锁车成功，实现远程开闭锁功能，同时时钟模块自动计时收费。 三、综合设计题第九章1、物联网智能家居安防系统（功能模块组成，WSN 监测子系统，门禁控制 子系统的工作原理和设计思路） 基于物联网的智能家居安防系统主要有：中央控制系统、WSN监测子系统、移动物体定位子系统、门禁控制子系统和客户/服务器（Browser/Server，B/S）结构远程监控子系统等功能模块组成。 WSN监测子系统， 主要是针对家居环境的动态变化情况进行实时监测和感知，监测室内环境变化。该系统通过ZigBee 网络搭建WSN，由各类传感器组成智能信息采集模块，将采集到的实时数据信息及时存入数据库，使用预前设置的预警阀值实现报警功能，用户可在本地服务器或者远程终端在线查看数据库信息。 当采集到数据后，经过ZigBee 网络传输到中央控制系统，由中央控制进行数据分析和处理；若发现异常，将通过ZigBee 网络发出相应控制命令，进而进行各种报警或安全防护措施等。而室内各种传感器构成一个WSN，在这个网络中通过相应路由算法和协议实现数据的采集、传输和处理等。 门禁控制子系统， 主要是用户对家居进入权限限制和条件允许，利用现有门禁并在其上通过嵌入式单片机技术实现安全门的进一步智能化，在该安全门上通过红外传感器可以感知人的存在，通过人脸识别可以进行进门的身份认证等，智能安全门将其采集到的数据通过有线网络或无线路由器传输到中央控制系统进行数据分析和处理，发出相应控制命令给智能安全门，并将相关信息传输给远程用户的智能手机。 系统核心功能就是通过使用摄像头、麦克风、指纹识别器以及可控开关等硬件，实现多元特征的身份识别系统，用户可以选着在身份识别时启用或关闭一个或多个生物特征识别进行身份验证。若识别为合法用户则通过允许进入，在多次验证失败后向用户或者小区保安发出预警信号。","link":"/2020/06/28/2020-06-28-IoT/"}],"tags":[{"name":"日志","slug":"日志","link":"/tags/%E6%97%A5%E5%BF%97/"},{"name":"教程","slug":"教程","link":"/tags/%E6%95%99%E7%A8%8B/"},{"name":"日常","slug":"日常","link":"/tags/%E6%97%A5%E5%B8%B8/"},{"name":"学习","slug":"学习","link":"/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"考研","slug":"考研","link":"/tags/%E8%80%83%E7%A0%94/"}],"categories":[]}